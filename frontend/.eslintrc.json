{
  "extends": ["next/core-web-vitals", "next/typescript"],
  "plugins": ["import", "@typescript-eslint"],
  "parser": "@typescript-eslint/parser",
  "rules": {
    "import/order": [
      "error",
      {
        "groups": ["builtin", "external", "internal", "parent", "sibling", "index"],
        "pathGroups": [
          {
            "pattern": "react",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "next/**",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "@/shared/**",
            "group": "internal",
            "position": "before"
          },
          {
            "pattern": "@/entities/**",
            "group": "internal",
            "position": "after"
          },
          {
            "pattern": "@/features/**",
            "group": "internal",
            "position": "after"
          },
          {
            "pattern": "@/widgets/**",
            "group": "internal",
            "position": "after"
          },
          {
            "pattern": "@/app/**",
            "group": "internal",
            "position": "after"
          }
        ],
        "pathGroupsExcludedImportTypes": ["react"],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],
    "import/no-restricted-paths": [
      "error",
      {
        "zones": [
          {
            "target": "./widgets",
            "from": "./widgets"
          },
          {
            "target": "./features",
            "from": "./features"
          },
          {
            "target": "./entities",
            "from": "./entities"
          },
          {
            "target": "./widgets",
            "from": "./features"
          },
          {
            "target": "./features",
            "from": "./entities"
          },
          {
            "target": "./widgets",
            "from": "./entities"
          }
        ]
      }
    ],
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_"
      }
    ],

    "@typescript-eslint/no-explicit-any": "warn",
    "prefer-const": "error",
    "no-var": "error"
  },
  "settings": {
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true,
        "project": "./tsconfig.json"
      }
    }
  }
}
