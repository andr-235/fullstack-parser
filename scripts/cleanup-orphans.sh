#!/bin/bash

# =============================================================================
# CLEANUP ORPHAN CONTAINERS SCRIPT
# =============================================================================
# –£–¥–∞–ª—è–µ—Ç —Å–∏—Ä–æ—Ç—Å–∫–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Ç–µ–∫—É—â–µ–º—É compose —Ñ–∞–π–ª—É

set -euo pipefail

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
cd /opt/app

log_info "üßπ –û—á–∏—Å—Ç–∫–∞ —Å–∏—Ä–æ—Ç—Å–∫–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."

# –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ —Å –∏–º–µ–Ω–µ–º fullstack
log_info "–ü–æ–∏—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ —Å –∏–º–µ–Ω–µ–º 'fullstack'..."
all_containers=$(docker ps -a --filter "name=fullstack" --format "{{.Names}}")

if [[ -z "$all_containers" ]]; then
    log_success "–°–∏—Ä–æ—Ç—Å–∫–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    exit 0
fi

# –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ compose —Ñ–∞–π–ª–∞
log_info "–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –∏–∑ docker-compose.prod.ip.yml..."
compose_containers=$(docker compose -f docker-compose.prod.ip.yml ps --format "{{.Name}}" 2>/dev/null || echo "")

# –ù–∞—Ö–æ–¥–∏–º —Å–∏—Ä–æ—Ç—Å–∫–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
orphan_containers=""
for container in $all_containers; do
    if [[ ! " $compose_containers " =~ " $container " ]]; then
        orphan_containers="$orphan_containers $container"
    fi
done

if [[ -z "$orphan_containers" ]]; then
    log_success "–°–∏—Ä–æ—Ç—Å–∫–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    exit 0
fi

log_warning "–ù–∞–π–¥–µ–Ω—ã —Å–∏—Ä–æ—Ç—Å–∫–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:"
for container in $orphan_containers; do
    echo "  - $container"
done

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏ —É–¥–∞–ª—è–µ–º —Å–∏—Ä–æ—Ç—Å–∫–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
log_info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Å–∏—Ä–æ—Ç—Å–∫–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
for container in $orphan_containers; do
    log_info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ $container..."
    docker stop "$container" 2>/dev/null || true
    
    log_info "–£–¥–∞–ª–µ–Ω–∏–µ $container..."
    docker rm "$container" 2>/dev/null || true
    
    log_success "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä $container —É–¥–∞–ª—ë–Ω"
done

log_success "–û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
log_info "–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker compose -f docker-compose.prod.ip.yml ps 