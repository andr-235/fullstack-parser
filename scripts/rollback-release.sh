#!/bin/bash

# üîÑ –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–∫–∞—Ç–∞ —Ä–µ–ª–∏–∑–∞
# –ê–≤—Ç–æ—Ä: AI Assistant
# –í–µ—Ä—Å–∏—è: 1.0.0

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

log_step() {
    echo -e "${PURPLE}üîß $1${NC}"
}

# –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–µ–≥–æ–≤
get_available_tags() {
    git tag --sort=-version:refname | head -10
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ç–µ–≥–∞
check_tag_exists() {
    local tag=$1
    if git rev-parse "$tag" >/dev/null 2>&1; then
        return 0
    else
        return 1
    fi
}

# –û—Ç–∫–∞—Ç Docker –æ–±—Ä–∞–∑–æ–≤
rollback_docker() {
    local target_version=$1

    log_step "–û—Ç–∫–∞—Ç Docker –æ–±—Ä–∞–∑–æ–≤ –∫ –≤–µ—Ä—Å–∏–∏ $target_version..."

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è docker-compose —Ñ–∞–π–ª–∞
    if [ ! -f "docker-compose.prod.ip.yml" ]; then
        log_error "–§–∞–π–ª docker-compose.prod.ip.yml –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi

    # –û—Ç–∫–∞—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –≤–µ—Ä—Å–∏–∏
    docker-compose -f docker-compose.prod.ip.yml down
    docker-compose -f docker-compose.prod.ip.yml pull
    docker-compose -f docker-compose.prod.ip.yml up -d --remove-orphans

    log_success "Docker –æ–±—Ä–∞–∑—ã –æ—Ç–∫–∞—á–µ–Ω—ã –∫ –≤–µ—Ä—Å–∏–∏ $target_version"
}

# –û—Ç–∫–∞—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (–µ—Å–ª–∏ –µ—Å—Ç—å backup)
rollback_database() {
    local target_version=$1

    log_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ backup –¥–ª—è –≤–µ—Ä—Å–∏–∏ $target_version..."

    # –ü–æ–∏—Å–∫ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ backup —Ñ–∞–π–ª–∞
    backup_file=$(find backup/ -name "*$target_version*" -type f | head -1)

    if [ -n "$backup_file" ]; then
        log_warning "–ù–∞–π–¥–µ–Ω backup —Ñ–∞–π–ª: $backup_file"
        read -p "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏–∑ backup? (y/N): " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            log_step "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
            # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∫–æ–º–∞–Ω–¥–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
            # ./scripts/restore_db.sh "$backup_file"
            log_success "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
        fi
    else
        log_info "Backup –¥–ª—è –≤–µ—Ä—Å–∏–∏ $target_version –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ hotfix –≤–µ—Ç–∫–∏ –¥–ª—è –æ—Ç–∫–∞—Ç–∞
create_rollback_branch() {
    local target_version=$1
    local current_version=$2

    log_step "–°–æ–∑–¥–∞–Ω–∏–µ hotfix –≤–µ—Ç–∫–∏ –¥–ª—è –æ—Ç–∫–∞—Ç–∞..."

    branch_name="hotfix/rollback-to-v$target_version"

    # –°–æ–∑–¥–∞–Ω–∏–µ –≤–µ—Ç–∫–∏ –æ—Ç main
    git checkout main
    git pull origin main
    git checkout -b "$branch_name"

    # –û—Ç–∫–∞—Ç –∫ —Ü–µ–ª–µ–≤–æ–º—É —Ç–µ–≥—É
    git revert --no-edit "$current_version"..HEAD

    log_success "–°–æ–∑–¥–∞–Ω–∞ –≤–µ—Ç–∫–∞ $branch_name"
    log_info "–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ—Ç–∫–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
    log_info "git push origin $branch_name"
    log_info "–°–æ–∑–¥–∞–π—Ç–µ Pull Request –¥–ª—è merge –≤ main"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo -e "${PURPLE}üîÑ –û—Ç–∫–∞—Ç —Ä–µ–ª–∏–∑–∞${NC}"
    echo "=================="

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –º—ã –≤ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
    if ! git rev-parse --git-dir > /dev/null 2>&1; then
        log_error "–ù–µ –≤ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏"
        exit 1
    fi

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏
    current_version=$(git describe --tags --abbrev=0 2>/dev/null || echo "unknown")
    log_info "–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: $current_version"

    # –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–≥–∏
    log_step "–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–µ—Ä—Å–∏–∏ –¥–ª—è –æ—Ç–∫–∞—Ç–∞:"
    available_tags=$(get_available_tags)
    if [ -n "$available_tags" ]; then
        echo "$available_tags" | nl
    else
        log_error "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–µ–≥–æ–≤"
        exit 1
    fi

    # –í—ã–±–æ—Ä —Ü–µ–ª–µ–≤–æ–π –≤–µ—Ä—Å–∏–∏
    echo
    echo -e "${CYAN}–í—ã–±–µ—Ä–∏—Ç–µ –≤–µ—Ä—Å–∏—é –¥–ª—è –æ—Ç–∫–∞—Ç–∞:${NC}"
    read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–µ—Ä—Å–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1.2.2): " target_version

    if [ -z "$target_version" ]; then
        log_error "–í–µ—Ä—Å–∏—è –Ω–µ —É–∫–∞–∑–∞–Ω–∞"
        exit 1
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ç–µ–≥–∞
    if ! check_tag_exists "v$target_version"; then
        log_error "–¢–µ–≥ v$target_version –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi

    log_info "–û—Ç–∫–∞—Ç –∫ –≤–µ—Ä—Å–∏–∏: v$target_version"

    # –í—ã–±–æ—Ä —Ç–∏–ø–∞ –æ—Ç–∫–∞—Ç–∞
    echo -e "${CYAN}–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ—Ç–∫–∞—Ç–∞:${NC}"
    echo "1) üê≥ –¢–æ–ª—å–∫–æ Docker –æ–±—Ä–∞–∑—ã"
    echo "2) üóÑÔ∏è Docker + –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö"
    echo "3) üîÑ –ü–æ–ª–Ω—ã–π –æ—Ç–∫–∞—Ç (Docker + DB + –∫–æ–¥)"
    echo "4) ‚ùå –û—Ç–º–µ–Ω–∞"

    read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-4): " rollback_type

    case $rollback_type in
        1)
            log_step "–û—Ç–∫–∞—Ç —Ç–æ–ª—å–∫–æ Docker –æ–±—Ä–∞–∑–æ–≤..."
            rollback_docker "$target_version"
            ;;
        2)
            log_step "–û—Ç–∫–∞—Ç Docker –æ–±—Ä–∞–∑–æ–≤ –∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
            rollback_docker "$target_version"
            rollback_database "$target_version"
            ;;
        3)
            log_step "–ü–æ–ª–Ω—ã–π –æ—Ç–∫–∞—Ç..."
            rollback_docker "$target_version"
            rollback_database "$target_version"
            create_rollback_branch "$target_version" "$current_version"
            ;;
        4)
            log_info "–û—Ç–∫–∞—Ç –æ—Ç–º–µ–Ω–µ–Ω"
            exit 0
            ;;
        *)
            log_error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
            exit 1
            ;;
    esac

    echo
    log_success "üéâ –û—Ç–∫–∞—Ç –∫ –≤–µ—Ä—Å–∏–∏ v$target_version –∑–∞–≤–µ—Ä—à–µ–Ω!"

    # –ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    echo
    log_info "–ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
    echo "  ‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å: docker-compose -f docker-compose.prod.ip.yml ps"
    echo "  ‚Ä¢ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏: docker-compose -f docker-compose.prod.ip.yml logs"
    echo "  ‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–µ—Ä—Å–∏–∏: make release-status"
}

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
main "$@"
