#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–ø–ª–æ—è —Å retry –ª–æ–≥–∏–∫–æ–π –∏ —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º–∏ —Ç–∞–π–º–∞—É—Ç–∞–º–∏
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/deploy-with-retry.sh [service_name]

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[$(date +'%Y-%m-%d %H:%M:%S')] WARNING: $1${NC}"
}

error() {
    echo -e "${RED}[$(date +'%Y-%m-%d %H:%M:%S')] ERROR: $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ docker-compose —Ñ–∞–π–ª–∞
if [ ! -f "docker-compose.prod.ip.yml" ]; then
    error "–§–∞–π–ª docker-compose.prod.ip.yml –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env.prod
if [ ! -f ".env.prod" ]; then
    error "–§–∞–π–ª .env.prod –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–ø–ª–æ—è —Å retry
deploy_with_retry() {
    local service=$1
    local max_retries=3
    local retry_count=0

    log "–ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π —Å–µ—Ä–≤–∏—Å–∞: $service"

    while [ $retry_count -lt $max_retries ]; do
        log "–ü–æ–ø—ã—Ç–∫–∞ $((retry_count + 1)) –∏–∑ $max_retries"

        if docker-compose -f docker-compose.prod.ip.yml up -d --build $service; then
            log "‚úÖ –î–µ–ø–ª–æ–π —Å–µ—Ä–≤–∏—Å–∞ $service —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à—ë–Ω!"
            return 0
        else
            retry_count=$((retry_count + 1))
            if [ $retry_count -lt $max_retries ]; then
                warn "–î–µ–ø–ª–æ–π –Ω–µ —É–¥–∞–ª—Å—è. –û–∂–∏–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π..."
                sleep 30
            fi
        fi
    done

    error "‚ùå –î–µ–ø–ª–æ–π —Å–µ—Ä–≤–∏—Å–∞ $service –Ω–µ —É–¥–∞–ª—Å—è –ø–æ—Å–ª–µ $max_retries –ø–æ–ø—ã—Ç–æ–∫"
    return 1
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞
check_service_health() {
    local service=$1
    local max_attempts=10
    local attempt=0

    log "–ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–∏—Å–∞: $service"

    while [ $attempt -lt $max_attempts ]; do
        if docker-compose -f docker-compose.prod.ip.yml ps $service | grep -q "Up"; then
            log "‚úÖ –°–µ—Ä–≤–∏—Å $service –∑–∞–ø—É—â–µ–Ω"
            return 0
        fi

        attempt=$((attempt + 1))
        if [ $attempt -lt $max_attempts ]; then
            warn "–°–µ—Ä–≤–∏—Å $service –µ—â—ë –Ω–µ –≥–æ—Ç–æ–≤. –û–∂–∏–¥–∞–Ω–∏–µ..."
            sleep 10
        fi
    done

    error "‚ùå –°–µ—Ä–≤–∏—Å $service –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ –æ–∂–∏–¥–∞–µ–º–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏"
    return 1
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
    log "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π —Å retry –ª–æ–≥–∏–∫–æ–π"

    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
    log "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–µ—Ä–≤–∏—Å—ã..."
    docker-compose -f docker-compose.prod.ip.yml down --remove-orphans

    # –û—á–∏—â–∞–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –æ–±—Ä–∞–∑—ã –∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    log "–û—á–∏—â–∞–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ä–µ—Å—É—Ä—Å—ã..."
    docker system prune -f

    # –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Å–µ—Ä–≤–∏—Å
    if [ -n "$1" ]; then
        deploy_with_retry "$1"
        check_service_health "$1"
    else
        # –î–µ–ø–ª–æ–∏–º –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –ø–æ –ø–æ—Ä—è–¥–∫—É
        log "–î–µ–ø–ª–æ–∏–º –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã..."

        # –°–Ω–∞—á–∞–ª–∞ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏ Redis
        deploy_with_retry "postgres"
        check_service_health "postgres"

        deploy_with_retry "redis"
        check_service_health "redis"

        # –ó–∞—Ç–µ–º backend –∏ worker
        deploy_with_retry "backend"
        check_service_health "backend"

        deploy_with_retry "arq-worker"
        check_service_health "arq-worker"

        # –ó–∞—Ç–µ–º frontend
        deploy_with_retry "frontend"
        check_service_health "frontend"

        # –ò –Ω–∞–∫–æ–Ω–µ—Ü nginx
        deploy_with_retry "nginx"
        check_service_health "nginx"
    fi

    log "üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à—ë–Ω!"

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
    log "–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
    docker-compose -f docker-compose.prod.ip.yml ps
}

# –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
main "$@"
