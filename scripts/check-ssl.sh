#!/bin/bash

# =============================================================================
# SSL CERTIFICATE CHECK SCRIPT
# =============================================================================
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞

set -e

echo "üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å —Ü–≤–µ—Ç–æ–º
print_status() {
    local status=$1
    local message=$2
    if [ "$status" = "OK" ]; then
        echo -e "${GREEN}‚úÖ $message${NC}"
    elif [ "$status" = "WARNING" ]; then
        echo -e "${YELLOW}‚ö†Ô∏è  $message${NC}"
    else
        echo -e "${RED}‚ùå $message${NC}"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ —á–µ—Ä–µ–∑ OpenSSL
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ SSL —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è..."
if openssl s_client -connect localhost:443 -servername parser.mysite.ru < /dev/null 2>/dev/null | openssl x509 -noout -text > /dev/null 2>&1; then
    print_status "OK" "SSL —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
else
    print_status "ERROR" "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å SSL —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ"
    exit 1
fi

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ
echo "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ:"
echo ""

# Subject
subject=$(openssl s_client -connect localhost:443 -servername parser.mysite.ru < /dev/null 2>/dev/null | openssl x509 -noout -subject 2>/dev/null)
echo -e "${BLUE}Subject:${NC} $subject"

# Issuer
issuer=$(openssl s_client -connect localhost:443 -servername parser.mysite.ru < /dev/null 2>/dev/null | openssl x509 -noout -issuer 2>/dev/null)
echo -e "${BLUE}Issuer:${NC} $issuer"

# –î–∞—Ç—ã
echo ""
echo -e "${BLUE}–î–∞—Ç—ã –¥–µ–π—Å—Ç–≤–∏—è:${NC}"
openssl s_client -connect localhost:443 -servername parser.mysite.ru < /dev/null 2>/dev/null | openssl x509 -noout -dates 2>/dev/null

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–º–µ–Ω–∞
echo ""
echo "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–º–µ–Ω–∞ –≤ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ..."
cert_cn=$(openssl s_client -connect localhost:443 -servername parser.mysite.ru < /dev/null 2>/dev/null | openssl x509 -noout -subject 2>/dev/null | sed -n 's/.*CN = \(.*\)/\1/p')
if [ "$cert_cn" = "parser.mysite.ru" ]; then
    print_status "OK" "–î–æ–º–µ–Ω –≤ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω: $cert_cn"
else
    print_status "WARNING" "–î–æ–º–µ–Ω –≤ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ: $cert_cn (–æ–∂–∏–¥–∞–ª—Å—è: parser.mysite.ru)"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTP —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞
echo ""
echo "üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTP —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞..."
http_status=$(curl -s -o /dev/null -w "%{http_code}" http://localhost/ 2>/dev/null)
if [ "$http_status" = "301" ] || [ "$http_status" = "302" ]; then
    print_status "OK" "HTTP —Ä–µ–¥–∏—Ä–µ–∫—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç (—Å—Ç–∞—Ç—É—Å: $http_status)"
else
    print_status "WARNING" "HTTP –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç—É—Å: $http_status (–æ–∂–∏–¥–∞–ª—Å—è 301 –∏–ª–∏ 302)"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTPS –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
echo ""
echo "üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTPS –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏..."
https_status=$(curl -k -s -o /dev/null -w "%{http_code}" https://localhost/ 2>/dev/null)
if [ "$https_status" = "200" ] || [ "$https_status" = "307" ]; then
    print_status "OK" "HTTPS –¥–æ—Å—Ç—É–ø–µ–Ω (—Å—Ç–∞—Ç—É—Å: $https_status)"
else
    print_status "ERROR" "HTTPS –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (—Å—Ç–∞—Ç—É—Å: $https_status)"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
echo ""
echo "üõ°Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏..."
headers=$(curl -k -s -I https://localhost/ 2>/dev/null)

# HSTS
if echo "$headers" | grep -q "Strict-Transport-Security"; then
    print_status "OK" "HSTS –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
else
    print_status "WARNING" "HSTS –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
fi

# X-Frame-Options
if echo "$headers" | grep -q "X-Frame-Options"; then
    print_status "OK" "X-Frame-Options –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
else
    print_status "WARNING" "X-Frame-Options –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
fi

# X-Content-Type-Options
if echo "$headers" | grep -q "X-Content-Type-Options"; then
    print_status "OK" "X-Content-Type-Options –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
else
    print_status "WARNING" "X-Content-Type-Options –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
fi

echo ""
echo "üéâ –ü—Ä–æ–≤–µ—Ä–∫–∞ SSL –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üìù –ü—Ä–∏–º–µ—á–∞–Ω–∏—è:"
echo "- Self-signed —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –≤—ã–∑–æ–≤–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ"
echo "- –î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Let's Encrypt"
echo "- –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω 365 –¥–Ω–µ–π"
echo ""
echo "üîó –î–æ—Å—Ç—É–ø–Ω—ã–µ URL:"
echo "- HTTP: http://localhost (—Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ HTTPS)"
echo "- HTTPS: https://localhost (—Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º –æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ)"
echo "- API: https://localhost/api/v1/health/"
echo "- Dashboard: https://localhost/dashboard" 