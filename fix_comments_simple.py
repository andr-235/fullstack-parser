#!/usr/bin/env python3
"""
–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
"""

import asyncio
import os
from sqlalchemy import create_engine, text
from sqlalchemy.orm import sessionmaker

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
DB_USER = os.getenv("DB_USER", "postgres")
DB_PASSWORD = os.getenv("DB_PASSWORD", "postgres")
DB_HOST = os.getenv("DB_HOST", "postgres")
DB_PORT = os.getenv("DB_PORT", "5432")
DB_NAME = os.getenv("DB_NAME", "vk_parser")

# URL –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
DATABASE_URL = f"postgresql://{DB_USER}:{DB_PASSWORD}@{DB_HOST}:{DB_PORT}/{DB_NAME}"


async def fix_comments_data():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤"""

    print("üîç –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    print(f"   URL: {DATABASE_URL}")

    # –°–æ–∑–¥–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    engine = create_engine(DATABASE_URL)
    Session = sessionmaker(bind=engine)

    with Session() as session:
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
        result = session.execute(text("SELECT COUNT(*) FROM vk_comments"))
        comments_count = result.scalar()
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {comments_count}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤
        result = session.execute(text("SELECT COUNT(*) FROM vk_posts"))
        posts_count = result.scalar()
        print(f"üìù –ù–∞–π–¥–µ–Ω–æ –ø–æ—Å—Ç–æ–≤: {posts_count}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥—Ä—É–ø–ø
        result = session.execute(text("SELECT COUNT(*) FROM vk_groups"))
        groups_count = result.scalar()
        print(f"üë• –ù–∞–π–¥–µ–Ω–æ –≥—Ä—É–ø–ø: {groups_count}")

        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–≤—è–∑–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ —Å –ø–æ—Å—Ç–∞–º–∏
        print("\nüîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–≤—è–∑–∏...")

        # –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –±–µ–∑ –ø–æ—Å—Ç–æ–≤
        result = session.execute(
            text(
                """
            SELECT COUNT(*) FROM vk_comments c 
            LEFT JOIN vk_posts p ON c.post_id = p.id 
            WHERE p.id IS NULL
        """
            )
        )
        comments_without_post = result.scalar()
        print(f"   –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –±–µ–∑ –ø–æ—Å—Ç–∞: {comments_without_post}")

        # –ü–æ—Å—Ç—ã –±–µ–∑ –≥—Ä—É–ø–ø
        result = session.execute(
            text(
                """
            SELECT COUNT(*) FROM vk_posts p 
            LEFT JOIN vk_groups g ON p.group_id = g.id 
            WHERE g.id IS NULL
        """
            )
        )
        posts_without_group = result.scalar()
        print(f"   –ü–æ—Å—Ç–æ–≤ –±–µ–∑ –≥—Ä—É–ø–ø—ã: {posts_without_group}")

        # –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Å –≥—Ä—É–ø–ø–∞–º–∏
        result = session.execute(
            text(
                """
            SELECT COUNT(*) FROM vk_comments c 
            JOIN vk_posts p ON c.post_id = p.id 
            JOIN vk_groups g ON p.group_id = g.id
        """
            )
        )
        comments_with_group = result.scalar()
        print(f"   –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ —Å –≥—Ä—É–ø–ø–æ–π: {comments_with_group}")

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É post_vk_id –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        print("\nüîß –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã...")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–æ–ª–æ–Ω–∫–∞ post_vk_id
        result = session.execute(
            text(
                """
            SELECT column_name FROM information_schema.columns 
            WHERE table_name = 'vk_comments' AND column_name = 'post_vk_id'
        """
            )
        )

        if not result.fetchone():
            print("   –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É post_vk_id...")
            session.execute(
                text("ALTER TABLE vk_comments ADD COLUMN post_vk_id INTEGER")
            )
            session.commit()
            print("   ‚úÖ –ö–æ–ª–æ–Ω–∫–∞ post_vk_id –¥–æ–±–∞–≤–ª–µ–Ω–∞")
        else:
            print("   ‚úÖ –ö–æ–ª–æ–Ω–∫–∞ post_vk_id —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

        # –û–±–Ω–æ–≤–ª—è–µ–º post_vk_id –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
        print("\nüîÑ –û–±–Ω–æ–≤–ª—è–µ–º post_vk_id...")

        result = session.execute(
            text(
                """
            UPDATE vk_comments 
            SET post_vk_id = p.vk_id 
            FROM vk_posts p 
            WHERE vk_comments.post_id = p.id 
            AND vk_comments.post_vk_id IS NULL
        """
            )
        )

        updated_count = result.rowcount
        session.commit()
        print(f"   ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {updated_count}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...")

        result = session.execute(
            text(
                """
            SELECT c.id, c.post_vk_id, g.name as group_name
            FROM vk_comments c 
            JOIN vk_posts p ON c.post_id = p.id 
            JOIN vk_groups g ON p.group_id = g.id
            LIMIT 5
        """
            )
        )

        for row in result.fetchall():
            print(f"   –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π {row[0]}: post_vk_id={row[1]}, –≥—Ä—É–ø–ø–∞='{row[2]}'")

        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≥—Ä—É–ø–ø–∞–º
        print("\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≥—Ä—É–ø–ø–∞–º:")
        result = session.execute(
            text(
                """
            SELECT g.name, COUNT(c.id) as comments_count
            FROM vk_groups g 
            JOIN vk_posts p ON g.id = p.group_id 
            JOIN vk_comments c ON p.id = c.post_id
            GROUP BY g.id, g.name
            ORDER BY comments_count DESC
            LIMIT 5
        """
            )
        )

        for row in result.fetchall():
            print(f"   {row[0]}: {row[1]} –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤")

    print("\n‚úÖ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")


if __name__ == "__main__":
    asyncio.run(fix_comments_data())
