#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Ç–æ–∫–µ–Ω–∞ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –ø–æ—Å—Ç–æ–º
"""

import asyncio
import httpx


async def test_new_token():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –ø–æ—Å—Ç–æ–º"""
    # –ù–æ–≤—ã–π —Ç–æ–∫–µ–Ω
    token = "vk1.a.EwV_6ctsK5EH6XvL4-GIep-yY9xbiGn1xluN6dj4UhPEeS9ATWXl7OAe_KAvqdBOb8ZMXt9CRmhzsupqQiLhpwCEUPGgvYHGK_zB2cVmubiezx36CuX7rkWLVSDlBXzdhY9QYY5qv7M3G3dMGSZ1g7v_QFqkgYXenlNNSQsVnbvtl5JDDcgt2-v-U5Y1ArnEueVOOTmj2DNJmEqfjDPrtQ"
    api_version = "5.131"

    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–æ–∫–µ–Ω–∞ —Å –ø–æ—Å—Ç–æ–º 126563...")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ—Å—Ç–∞
    url = "https://api.vk.com/method/wall.getComments"
    params = {
        "access_token": token,
        "v": api_version,
        "owner_id": -43377172,  # –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π ID –¥–ª—è –≥—Ä—É–ø–ø—ã
        "post_id": 126563,
        "count": 100,
        "sort": "asc",
    }

    try:
        async with httpx.AsyncClient() as client:
            response = await client.get(url, params=params)
            data = response.json()

            if "error" in data:
                error_code = data["error"].get("error_code", "unknown")
                error_msg = data["error"].get("error_msg", "unknown")
                print(
                    f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º: {error_code} - {error_msg}"
                )

                if error_code == 15:
                    print(
                        "   üí° –ö–æ–¥ 15: Access denied - –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"
                    )
                    print(
                        "   –ü—Ä–æ–±–ª–µ–º–∞ –ù–ï –≤ —Ç–æ–∫–µ–Ω–µ, –∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –≥—Ä—É–ø–ø—ã/–ø–æ—Å—Ç–∞"
                    )
                elif error_code == 5:
                    print(
                        "   üí° –ö–æ–¥ 5: Authorization failed - –ø—Ä–æ–±–ª–µ–º–∞ —Å —Ç–æ–∫–µ–Ω–æ–º"
                    )
                else:
                    print(f"   üí° –ö–æ–¥ {error_code}: {error_msg}")
            else:
                print("‚úÖ –î–æ—Å—Ç—É–ø –∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º: OK")
                response_data = data.get("response", {})
                comments_count = response_data.get("count", 0)
                comments = response_data.get("items", [])

                print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {comments_count}")
                print(f"   –ü–æ–ª—É—á–µ–Ω–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {len(comments)}")

                # –ò—â–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Å "–≥–∏–≤–∏"
                found_givi = False
                for comment in comments:
                    text = comment.get("text", "").lower()
                    if "–≥–∏–≤–∏" in text:
                        found_givi = True
                        print(
                            f"   ‚úÖ –ù–∞–π–¥–µ–Ω –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å '–≥–∏–≤–∏': {comment.get('text', '')[:100]}..."
                        )
                        print(
                            f"      ID: {comment.get('id')}, –∞–≤—Ç–æ—Ä: {comment.get('from_id')}"
                        )

                if not found_givi:
                    print("   ‚ùå –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Å '–≥–∏–≤–∏' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
                print(f"\nüìù –ü–µ—Ä–≤—ã–µ 3 –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è:")
                for i, comment in enumerate(comments[:3]):
                    print(
                        f"   {i+1}. ID: {comment.get('id')}, —Ç–µ–∫—Å—Ç: {comment.get('text', '')[:50]}..."
                    )

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {e}")

    # –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä–∏–º –¥–æ—Å—Ç—É–ø –∫ —Å—Ç–µ–Ω–µ –≥—Ä—É–ø–ø—ã
    print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å—Ç–µ–Ω–µ –≥—Ä—É–ø–ø—ã...")
    url = "https://api.vk.com/method/wall.get"
    params = {
        "access_token": token,
        "v": api_version,
        "owner_id": -43377172,
        "count": 1,
    }

    try:
        async with httpx.AsyncClient() as client:
            response = await client.get(url, params=params)
            data = response.json()

            if "error" in data:
                print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å—Ç–µ–Ω–µ: {data['error']}")
            else:
                print("‚úÖ –î–æ—Å—Ç—É–ø –∫ —Å—Ç–µ–Ω–µ –≥—Ä—É–ø–ø—ã: OK")
                posts_count = data.get("response", {}).get("count", 0)
                print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤: {posts_count}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ—Å—Ç–æ–≤: {e}")


if __name__ == "__main__":
    asyncio.run(test_new_token())
