#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ MonitoringService
"""

import asyncio

from app.core.config import settings
from app.core.database import AsyncSessionLocal
from app.services.monitoring_service import MonitoringService
from app.services.vk_api_service import VKAPIService


async def test_monitoring_service():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç MonitoringService"""
    async with AsyncSessionLocal() as db:
        vk_service = VKAPIService(
            token=settings.vk.access_token, api_version=settings.vk.api_version
        )
        monitoring_service = MonitoringService(db=db, vk_service=vk_service)

        print("üîç –ó–∞–ø—É—Å–∫–∞–µ–º get_monitoring_stats...")
        stats = await monitoring_service.get_monitoring_stats()
        print("üìä Stats from MonitoringService:", stats)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª–µ next_monitoring_at_local
        if "next_monitoring_at_local" in stats:
            print(
                "‚úÖ –ü–æ–ª–µ next_monitoring_at_local –Ω–∞–π–¥–µ–Ω–æ:",
                stats["next_monitoring_at_local"],
            )
        else:
            print("‚ùå –ü–æ–ª–µ next_monitoring_at_local –ù–ï –Ω–∞–π–¥–µ–Ω–æ")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª–µ next_monitoring_at
        if "next_monitoring_at" in stats:
            print("üìÖ next_monitoring_at:", stats["next_monitoring_at"])

            # –ü–æ–ø—Ä–æ–±—É–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Ä—É—á–Ω—É—é
            from datetime import datetime

            from app.core.time_utils import format_datetime_for_display

            try:
                utc_time = datetime.fromisoformat(stats["next_monitoring_at"])
                local_time = format_datetime_for_display(utc_time)
                print("üïê –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è:", local_time)
            except Exception as e:
                print("‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏:", e)
        else:
            print("‚ùå –ü–æ–ª–µ next_monitoring_at –ù–ï –Ω–∞–π–¥–µ–Ω–æ")


if __name__ == "__main__":
    asyncio.run(test_monitoring_service())
