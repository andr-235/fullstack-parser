#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ü–µ–ª–µ–≤–æ–≥–æ –ø–æ—Å—Ç–∞ –≤ –±–æ–ª—å—à–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –ø–æ—Å—Ç–æ–≤
"""

import asyncio
from app.services.vk_api_service import VKAPIService
from app.core.config import settings


async def test_find_target_post():
    """–ò—â–µ—Ç —Ü–µ–ª–µ–≤–æ–π –ø–æ—Å—Ç –≤ –±–æ–ª—å—à–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –ø–æ—Å—Ç–æ–≤"""
    print("üîç –ò—â–µ–º —Ü–µ–ª–µ–≤–æ–π –ø–æ—Å—Ç –≤ –±–æ–ª—å—à–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –ø–æ—Å—Ç–æ–≤...")

    async with VKAPIService(
        token=settings.vk.access_token, api_version=settings.vk.api_version
    ) as vk_service:

        group_id = 43377172  # –†–ò–ê –ë–∏—Ä–æ–±–∏–¥–∂–∞–Ω
        target_post_id = 126563  # –ü–æ—Å—Ç —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º "–≥–∏–≤–∏"

        # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ—Å—Ç–æ–≤
        for count in [50, 100, 150, 200]:
            print(f"\nüìã –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–µ {count} –ø–æ—Å—Ç–æ–≤ –≥—Ä—É–ø–ø—ã {group_id}")
            try:
                posts = await vk_service.get_group_posts(
                    group_id=group_id, count=count
                )
                print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –ø–æ—Å—Ç–æ–≤: {len(posts)}")

                # –ò—â–µ–º —Ü–µ–ª–µ–≤–æ–π –ø–æ—Å—Ç
                target_post = None
                for post in posts:
                    if post.get("id") == target_post_id:
                        target_post = post
                        break

                if target_post:
                    print(
                        f"‚úÖ –ü–æ—Å—Ç {target_post_id} –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–≤—ã—Ö {count} –ø–æ—Å—Ç–∞—Ö!"
                    )
                    print(f"   –¢–µ–∫—Å—Ç: {target_post.get('text', '')[:100]}...")
                    print(
                        f"   –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {target_post.get('comments', {}).get('count', 0)}"
                    )

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ —ç—Ç–æ–º—É –ø–æ—Å—Ç—É
                    print(
                        f"\nüí¨ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –ø–æ—Å—Ç—É {target_post_id}"
                    )
                    try:
                        comments = await vk_service.get_post_comments(
                            owner_id=group_id, post_id=target_post_id, count=10
                        )
                        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {len(comments)}")

                        for i, comment in enumerate(comments, 1):
                            print(f"   {i}. ID: {comment.get('id')}")
                            print(f"      –ê–≤—Ç–æ—Ä: {comment.get('from_id')}")
                            print(
                                f"      –¢–µ–∫—Å—Ç: {comment.get('text', '')[:50]}..."
                            )
                            print(f"      –î–∞—Ç–∞: {comment.get('date')}")
                            print()

                    except Exception as e:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {e}")

                    break  # –ù–∞—à–ª–∏ –ø–æ—Å—Ç, –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞
                else:
                    print(
                        f"‚ùå –ü–æ—Å—Ç {target_post_id} –ù–ï –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–≤—ã—Ö {count} –ø–æ—Å—Ç–∞—Ö"
                    )
                    print(
                        f"   –î–∏–∞–ø–∞–∑–æ–Ω ID –ø–æ—Å—Ç–æ–≤: {posts[-1].get('id')} - {posts[0].get('id')}"
                    )

            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ {count} –ø–æ—Å—Ç–æ–≤: {e}")
                break


if __name__ == "__main__":
    asyncio.run(test_find_target_post())
