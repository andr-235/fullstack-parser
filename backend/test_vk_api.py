#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ VKAPIService
"""

import asyncio
from app.services.vk_api_service import VKAPIService
from app.core.config import settings


async def test_vk_api_service():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç VKAPIService"""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º VKAPIService...")

    async with VKAPIService(
        token=settings.vk.access_token, api_version=settings.vk.api_version
    ) as vk_service:

        # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥—Ä—É–ø–ø–µ –ø–æ ID
        print("\nüìã –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥—Ä—É–ø–ø–µ –ø–æ ID")
        try:
            group_info = await vk_service.get_group_info(1)  # ID –≥—Ä—É–ø–ø—ã
            if group_info:
                print(f"‚úÖ –ì—Ä—É–ø–ø–∞ –Ω–∞–π–¥–µ–Ω–∞: {group_info.get('name', 'N/A')}")
                print(f"   ID: {group_info.get('id', 'N/A')}")
                print(
                    f"   Screen name: {group_info.get('screen_name', 'N/A')}"
                )
            else:
                print("‚ùå –ì—Ä—É–ø–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥—Ä—É–ø–ø–µ: {e}")

        # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥—Ä—É–ø–ø–µ –ø–æ screen_name
        print("\nüìã –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥—Ä—É–ø–ø–µ –ø–æ screen_name")
        try:
            group_info = await vk_service.get_group_info(
                "club1"
            )  # –†–µ–∞–ª—å–Ω—ã–π screen_name
            if group_info:
                print(f"‚úÖ –ì—Ä—É–ø–ø–∞ –Ω–∞–π–¥–µ–Ω–∞: {group_info.get('name', 'N/A')}")
                print(f"   ID: {group_info.get('id', 'N/A')}")
                print(
                    f"   Screen name: {group_info.get('screen_name', 'N/A')}"
                )
            else:
                print("‚ùå –ì—Ä—É–ø–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥—Ä—É–ø–ø–µ: {e}")

        # –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å—Ç–æ–≤ –≥—Ä—É–ø–ø—ã
        print("\nüìù –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å—Ç–æ–≤ –≥—Ä—É–ø–ø—ã")
        try:
            posts = await vk_service.get_group_posts(group_id=1, count=5)
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –ø–æ—Å—Ç–æ–≤: {len(posts)}")
            if posts:
                print(f"   –ü–µ—Ä–≤—ã–π –ø–æ—Å—Ç ID: {posts[0].get('id', 'N/A')}")
                print(f"   –î–∞—Ç–∞: {posts[0].get('date', 'N/A')}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ—Å—Ç–æ–≤: {e}")

        # –¢–µ—Å—Ç 4: –ü–æ–∏—Å–∫ –≥—Ä—É–ø–ø
        print("\nüîç –¢–µ—Å—Ç 4: –ü–æ–∏—Å–∫ –≥—Ä—É–ø–ø")
        try:
            groups = await vk_service.search_groups(
                "–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ", count=3
            )
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –≥—Ä—É–ø–ø: {len(groups)}")
            for i, group in enumerate(groups[:3], 1):
                print(
                    f"   {i}. {group.get('name', 'N/A')} (ID: {group.get('id', 'N/A')})"
                )
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –≥—Ä—É–ø–ø: {e}")


if __name__ == "__main__":
    asyncio.run(test_vk_api_service())
