#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å –±–æ–ª—å—à–∏–º–∏ –∑–∞–¥–µ—Ä–∂–∫–∞–º–∏
"""

import asyncio

from app.core.config import settings
from app.services.vk_api_service import VKAPIService


async def test_slow_parsing():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –º–µ–¥–ª–µ–Ω–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥ —Å –±–æ–ª—å—à–∏–º–∏ –∑–∞–¥–µ—Ä–∂–∫–∞–º–∏"""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–µ–¥–ª–µ–Ω–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥ —Å –±–æ–ª—å—à–∏–º–∏ –∑–∞–¥–µ—Ä–∂–∫–∞–º–∏...")

    async with VKAPIService(
        token=settings.vk.access_token, api_version=settings.vk.api_version
    ) as vk_service:

        group_id = 43377172  # –†–ò–ê –ë–∏—Ä–æ–±–∏–¥–∂–∞–Ω
        target_post_id = 126563  # –ü–æ—Å—Ç —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º "–≥–∏–≤–∏"

        print("\nüìã –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–µ 20 –ø–æ—Å—Ç–æ–≤")
        try:
            posts = await vk_service.get_group_posts(
                group_id=group_id, count=20
            )
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –ø–æ—Å—Ç–æ–≤: {len(posts)}")

            # –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ—Å—Ç—ã —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏
            posts_with_comments = []
            for post in posts:
                comments_count = post.get("comments", {}).get("count", 0)
                if comments_count > 0:
                    posts_with_comments.append(post)

            print(f"üìù –ü–æ—Å—Ç–æ–≤ —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏: {len(posts_with_comments)}")

            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π –ø–æ—Å—Ç —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏ –æ—Ç–¥–µ–ª—å–Ω–æ
            for i, post in enumerate(posts_with_comments, 1):
                post_id = post.get("id")
                comments_count = post.get("comments", {}).get("count", 0)

                print(
                    f"\n{i}. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ—Å—Ç {post_id} ({comments_count} –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤)"
                )
                print(f"   –¢–µ–∫—Å—Ç: {post.get('text', '')[:100]}...")

                try:
                    # –û—á–µ–Ω—å –±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –∑–∞–ø—Ä–æ—Å–æ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
                    print("   ‚è≥ –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –∑–∞–ø—Ä–æ—Å–æ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤...")
                    await asyncio.sleep(5)

                    comments = await vk_service.get_all_post_comments(
                        owner_id=group_id, post_id=post_id
                    )

                    print(f"   ‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {len(comments)}")

                    # –ò—â–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Å "–≥–∏–≤–∏"
                    found_givi = False
                    for j, comment in enumerate(comments, 1):
                        text = comment.get("text", "").lower()
                        if "–≥–∏–≤–∏" in text:
                            print("   üîç –ù–ê–ô–î–ï–ù –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ô –° '–ì–ò–í–ò'!")
                            print(f"      ID: {comment.get('id')}")
                            print(f"      –ê–≤—Ç–æ—Ä: {comment.get('from_id')}")
                            print(f"      –¢–µ–∫—Å—Ç: {comment.get('text', '')}")
                            print(f"      –î–∞—Ç–∞: {comment.get('date')}")
                            found_givi = True
                        else:
                            print(
                                f"   {j}. ID: {comment.get('id')}, –¢–µ–∫—Å—Ç: {comment.get('text', '')[:50]}..."
                            )

                    if found_givi:
                        print(
                            f"   üéâ –£–°–ü–ï–•! –ù–∞–π–¥–µ–Ω –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å '–≥–∏–≤–∏' –≤ –ø–æ—Å—Ç–µ {post_id}"
                        )

                except Exception as e:
                    print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {e}")

                # –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø–æ—Å—Ç–∞–º–∏
                if i < len(posts_with_comments):
                    print("   ‚è≥ –ñ–¥–µ–º 10 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –ø–æ—Å—Ç–æ–º...")
                    await asyncio.sleep(10)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ü–µ–ª–µ–≤–æ–π –ø–æ—Å—Ç –≤ —Å–ø–∏—Å–∫–µ
            target_found = False
            for post in posts_with_comments:
                if post.get("id") == target_post_id:
                    target_found = True
                    break

            if not target_found:
                print(
                    f"\nüéØ –¶–µ–ª–µ–≤–æ–π –ø–æ—Å—Ç {target_post_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–≤—ã—Ö 20 –ø–æ—Å—Ç–∞—Ö"
                )
                print("   –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª—å—à–µ –ø–æ—Å—Ç–æ–≤...")

                # –ü–æ–ª—É—á–∞–µ–º –±–æ–ª—å—à–µ –ø–æ—Å—Ç–æ–≤
                more_posts = await vk_service.get_group_posts(
                    group_id=group_id, count=50
                )
                print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –ø–æ—Å—Ç–æ–≤: {len(more_posts)}")

                # –ò—â–µ–º —Ü–µ–ª–µ–≤–æ–π –ø–æ—Å—Ç
                for post in more_posts:
                    if post.get("id") == target_post_id:
                        comments_count = post.get("comments", {}).get(
                            "count", 0
                        )
                        print(
                            f"üéØ –ù–∞–π–¥–µ–Ω —Ü–µ–ª–µ–≤–æ–π –ø–æ—Å—Ç {target_post_id} —Å {comments_count} –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏"
                        )

                        if comments_count > 0:
                            print(
                                "   ‚è≥ –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –∑–∞–ø—Ä–æ—Å–æ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤..."
                            )
                            await asyncio.sleep(5)

                            try:
                                comments = (
                                    await vk_service.get_all_post_comments(
                                        owner_id=group_id,
                                        post_id=target_post_id,
                                    )
                                )

                                print(
                                    f"   ‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {len(comments)}"
                                )

                                for i, comment in enumerate(comments, 1):
                                    text = comment.get("text", "").lower()
                                    if "–≥–∏–≤–∏" in text:
                                        print(
                                            "   üîç –ù–ê–ô–î–ï–ù –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ô –° '–ì–ò–í–ò'!"
                                        )
                                        print(f"      ID: {comment.get('id')}")
                                        print(
                                            f"      –ê–≤—Ç–æ—Ä: {comment.get('from_id')}"
                                        )
                                        print(
                                            f"      –¢–µ–∫—Å—Ç: {comment.get('text', '')}"
                                        )
                                        print(
                                            f"      –î–∞—Ç–∞: {comment.get('date')}"
                                        )
                                    else:
                                        print(
                                            f"   {i}. ID: {comment.get('id')}, –¢–µ–∫—Å—Ç: {comment.get('text', '')[:50]}..."
                                        )

                            except Exception as e:
                                print(
                                    f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {e}"
                                )

                        break

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ—Å—Ç–æ–≤: {e}")
            import traceback

            traceback.print_exc()


if __name__ == "__main__":
    asyncio.run(test_slow_parsing())
