# Test configuration for Alembic
# Used for testing migrations in test environment

[alembic]
# Path to migration scripts
script_location = alembic

# Template for migration file names with timestamp
file_template = %%(year)d_%%(month).2d_%%(day).2d_%%(hour).2d%%(minute).2d-%%(rev)s_%%(slug)s

# Add src directory to Python path for imports
prepend_sys_path = .:src

# Timezone for timestamps (UTC for consistency)
timezone = UTC

# Max length for slug field in migration names
truncate_slug_length = 40

# Enable environment during revision command for template args
revision_environment = true

# Search for migration files recursively
recursive_version_locations = false

# Output encoding for migration files
output_encoding = utf-8

# Path separator for version locations and prepend_sys_path
path_separator = os

# Enable sourceless mode for .pyc/.pyo files
sourceless = false

# Test database URL
sqlalchemy.url = postgresql+asyncpg://postgres:postgres@localhost:5432/vk_parser_test

[post_write_hooks]
# Post-write hooks for code formatting and linting
hooks = black,ruff
black.type = console_scripts
black.entrypoint = black
black.options = -l 79 REVISION_SCRIPT_FILENAME
ruff.type = exec
ruff.executable = ruff
ruff.options = check --fix REVISION_SCRIPT_FILENAME
ruff.cwd = %(here)s

# Logging configuration for tests
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARNING
handlers = console
qualname =

[logger_sqlalchemy]
level = WARNING
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
