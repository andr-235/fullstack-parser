"""init all tables

Revision ID: 999999999999
Revises: 51fcd6f1165b
Create Date: 2025-07-15 11:45:00.000000

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = '999999999999'
down_revision: Union[str, None] = '51fcd6f1165b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    
    op.create_table('keywords',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('word', sa.String(length=200), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_case_sensitive', sa.Boolean(), nullable=True),
    sa.Column('is_whole_word', sa.Boolean(), nullable=True),
    sa.Column('total_matches', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_keywords_id'), 'keywords', ['id'], unique=False)
    op.create_index(op.f('ix_keywords_word'), 'keywords', ['word'], unique=False)
    
    op.create_table('vk_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('vk_id', sa.Integer(), nullable=False),
    sa.Column('screen_name', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('max_posts_to_check', sa.Integer(), nullable=True),
    sa.Column('last_parsed_at', sa.DateTime(), nullable=True),
    sa.Column('total_posts_parsed', sa.Integer(), nullable=True),
    sa.Column('total_comments_found', sa.Integer(), nullable=True),
    sa.Column('members_count', sa.Integer(), nullable=True),
    sa.Column('is_closed', sa.Boolean(), nullable=True),
    sa.Column('photo_url', sa.String(length=500), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vk_groups_id'), 'vk_groups', ['id'], unique=False)
    op.create_index(op.f('ix_vk_groups_vk_id'), 'vk_groups', ['vk_id'], unique=False)
    
    op.create_table('vk_posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('vk_id', sa.Integer(), nullable=False),
    sa.Column('vk_owner_id', sa.Integer(), nullable=False),
    sa.Column('text', sa.Text(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('published_at', sa.DateTime(), nullable=False),
    sa.Column('likes_count', sa.Integer(), nullable=True),
    sa.Column('reposts_count', sa.Integer(), nullable=True),
    sa.Column('comments_count', sa.Integer(), nullable=True),
    sa.Column('views_count', sa.Integer(), nullable=True),
    sa.Column('is_parsed', sa.Boolean(), nullable=True),
    sa.Column('parsed_at', sa.DateTime(), nullable=True),
    sa.Column('has_attachments', sa.Boolean(), nullable=True),
    sa.Column('attachments_info', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['vk_groups.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vk_id', 'group_id', name='uix_vkpost_vkid_groupid')
    )
    op.create_index(op.f('ix_vk_posts_id'), 'vk_posts', ['id'], unique=False)
    op.create_index(op.f('ix_vk_posts_vk_id'), 'vk_posts', ['vk_id'], unique=False)
    
    op.create_table('vk_comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('vk_id', sa.Integer(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('author_name', sa.String(length=200), nullable=True),
    sa.Column('author_screen_name', sa.String(length=100), nullable=True),
    sa.Column('author_photo_url', sa.String(length=500), nullable=True),
    sa.Column('published_at', sa.DateTime(), nullable=False),
    sa.Column('likes_count', sa.Integer(), nullable=True),
    sa.Column('parent_comment_id', sa.Integer(), nullable=True),
    sa.Column('has_attachments', sa.Boolean(), nullable=True),
    sa.Column('attachments_info', sa.Text(), nullable=True),
    sa.Column('is_processed', sa.Boolean(), nullable=True),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.Column('matched_keywords_count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_comment_id'], ['vk_comments.id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['vk_posts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vk_comments_id'), 'vk_comments', ['id'], unique=False)
    op.create_index(op.f('ix_vk_comments_vk_id'), 'vk_comments', ['vk_id'], unique=False)
    
    op.create_table('comment_keyword_matches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('comment_id', sa.Integer(), nullable=False),
    sa.Column('keyword_id', sa.Integer(), nullable=False),
    sa.Column('matched_text', sa.String(length=500), nullable=True),
    sa.Column('match_position', sa.Integer(), nullable=True),
    sa.Column('match_context', sa.String(length=1000), nullable=True),
    sa.Column('found_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['comment_id'], ['vk_comments.id'], ),
    sa.ForeignKeyConstraint(['keyword_id'], ['keywords.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_comment_keyword_matches_id'), 'comment_keyword_matches', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_comment_keyword_matches_id'), table_name='comment_keyword_matches')
    op.drop_table('comment_keyword_matches')
    op.drop_index(op.f('ix_vk_comments_vk_id'), table_name='vk_comments')
    op.drop_index(op.f('ix_vk_comments_id'), table_name='vk_comments')
    op.drop_table('vk_comments')
    op.drop_index(op.f('ix_vk_posts_vk_id'), table_name='vk_posts')
    op.drop_index(op.f('ix_vk_posts_id'), table_name='vk_posts')
    op.drop_table('vk_posts')
    op.drop_index(op.f('ix_vk_groups_vk_id'), table_name='vk_groups')
    op.drop_index(op.f('ix_vk_groups_id'), table_name='vk_groups')
    op.drop_table('vk_groups')
    op.drop_index(op.f('ix_keywords_word'), table_name='keywords')
    op.drop_index(op.f('ix_keywords_id'), table_name='keywords')
    op.drop_table('keywords')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ### 