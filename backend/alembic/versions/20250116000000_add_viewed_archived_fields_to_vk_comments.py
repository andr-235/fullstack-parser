"""add viewed and archived fields to vk comments

Revision ID: 20250116000000
Revises: 20250115000000
Create Date: 2025-01-16 00:00:00.000000

"""

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision = "20250116000000"
down_revision = "20250115000000"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "vk_comments",
        sa.Column("is_viewed", sa.Boolean(), nullable=True),
    )
    op.add_column(
        "vk_comments",
        sa.Column("viewed_at", sa.DateTime(), nullable=True),
    )
    op.add_column(
        "vk_comments",
        sa.Column("is_archived", sa.Boolean(), nullable=True),
    )
    op.add_column(
        "vk_comments",
        sa.Column("archived_at", sa.DateTime(), nullable=True),
    )

    # Устанавливаем значения по умолчанию
    op.execute(
        "UPDATE vk_comments SET is_viewed = false WHERE is_viewed IS NULL"
    )
    op.execute(
        "UPDATE vk_comments SET is_archived = false WHERE is_archived IS NULL"
    )

    # Делаем поля NOT NULL после установки значений по умолчанию
    op.alter_column(
        "vk_comments",
        "is_viewed",
        existing_type=sa.Boolean(),
        nullable=False,
    )
    op.alter_column(
        "vk_comments",
        "is_archived",
        existing_type=sa.Boolean(),
        nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("vk_comments", "archived_at")
    op.drop_column("vk_comments", "is_archived")
    op.drop_column("vk_comments", "viewed_at")
    op.drop_column("vk_comments", "is_viewed")
    # ### end Alembic commands ###
