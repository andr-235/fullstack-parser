"""Add fulltext search indexes for authors

Revision ID: add_fulltext_search_indexes
Revises: make_published_at_nullable
Create Date: 2025-01-11 19:00:00.000000

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy import text


# revision identifiers, used by Alembic.
revision = "add_fulltext_search_indexes"
down_revision = "make_published_at_nullable"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Отключаем транзакцию для CONCURRENTLY операций
    connection = op.get_bind()
    connection.execute(text("COMMIT"))
    
    # 1. Полнотекстовый поиск по имени и фамилии
    connection.execute(text("""
        CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_authors_fulltext_name 
        ON authors USING gin(to_tsvector('russian', 
            COALESCE(first_name, '') || ' ' || COALESCE(last_name, '')
        ))
    """))
    
    # 2. Полнотекстовый поиск по screen_name
    connection.execute(text("""
        CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_authors_fulltext_screen_name 
        ON authors USING gin(to_tsvector('russian', screen_name))
    """))
    
    # 3. Составной индекс для фильтрации по статусу и дате
    connection.execute(text("""
        CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_authors_status_created 
        ON authors (status, created_at DESC)
    """))
    
    # 4. Индекс для VK ID (уникальный)
    connection.execute(text("""
        CREATE UNIQUE INDEX CONCURRENTLY IF NOT EXISTS idx_authors_vk_id_unique 
        ON authors (vk_id)
    """))
    
    # 5. Индекс для screen_name (уникальный)
    connection.execute(text("""
        CREATE UNIQUE INDEX CONCURRENTLY IF NOT EXISTS idx_authors_screen_name_unique 
        ON authors (screen_name) WHERE screen_name IS NOT NULL
    """))
    
    # 6. Составной индекс для верификации и статуса
    connection.execute(text("""
        CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_authors_verified_status 
        ON authors (is_verified, status)
    """))
    
    # 7. Индекс для подписчиков и статуса
    connection.execute(text("""
        CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_authors_followers_status 
        ON authors (followers_count DESC, status)
    """))
    
    # 8. Индекс для последней активности
    connection.execute(text("""
        CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_authors_last_activity 
        ON authors (last_activity DESC) WHERE last_activity IS NOT NULL
    """))
    
    # 9. Партиальный индекс для активных авторов
    connection.execute(text("""
        CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_authors_active 
        ON authors (created_at DESC) WHERE status = 'active'
    """))
    
    # 10. Индекс для метаданных (TEXT) - используем btree вместо gin
    connection.execute(text("""
        CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_authors_metadata_btree 
        ON authors (author_metadata) WHERE author_metadata IS NOT NULL
    """))
    
    # Анализ таблицы для обновления статистики
    connection.execute(text("ANALYZE authors"))
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Отключаем транзакцию для CONCURRENTLY операций
    connection = op.get_bind()
    connection.execute(text("COMMIT"))
    
    # Удаляем все созданные индексы
    connection.execute(text("DROP INDEX CONCURRENTLY IF EXISTS idx_authors_fulltext_name"))
    connection.execute(text("DROP INDEX CONCURRENTLY IF EXISTS idx_authors_fulltext_screen_name"))
    connection.execute(text("DROP INDEX CONCURRENTLY IF EXISTS idx_authors_status_created"))
    connection.execute(text("DROP INDEX CONCURRENTLY IF EXISTS idx_authors_vk_id_unique"))
    connection.execute(text("DROP INDEX CONCURRENTLY IF EXISTS idx_authors_screen_name_unique"))
    connection.execute(text("DROP INDEX CONCURRENTLY IF EXISTS idx_authors_verified_status"))
    connection.execute(text("DROP INDEX CONCURRENTLY IF EXISTS idx_authors_followers_status"))
    connection.execute(text("DROP INDEX CONCURRENTLY IF EXISTS idx_authors_last_activity"))
    connection.execute(text("DROP INDEX CONCURRENTLY IF EXISTS idx_authors_active"))
    connection.execute(text("DROP INDEX CONCURRENTLY IF EXISTS idx_authors_metadata_btree"))
    
    # ### end Alembic commands ###
