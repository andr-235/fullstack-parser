"""
Production-ready FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è VK Comments Parser
—Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π –∏ middleware
"""

import logging
from contextlib import asynccontextmanager

from fastapi import FastAPI, HTTPException, Request, Response
from fastapi.middleware.cors import CORSMiddleware
from fastapi.responses import JSONResponse

from app.api.v1.api import api_router
from app.core.config import settings
from app.core.database import init_db

# –ò–º–ø–æ—Ä—Ç –Ω–æ–≤–æ–≥–æ middleware
from app.api.v1.middleware.rate_limit import SimpleRateLimitMiddleware
from app.api.v1.middleware.logging import RequestLoggingMiddleware
from app.core.error_handlers import (
    base_exception_handler,
    cache_exception_handler,
    database_exception_handler,
    generic_exception_handler,
    rate_limit_exception_handler,
    validation_exception_handler,
    vk_api_exception_handler,
)
from app.api.v1.exceptions import (
    APIException as BaseAPIException,
    ValidationError,
    NotFoundError,
    RateLimitError,
    ServiceUnavailableError,
    VKAPIError,
)

# –ü—Ä–æ—Å—Ç–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–º–µ—Å—Ç–æ structlog
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


@asynccontextmanager
async def lifespan(app: FastAPI):
    """Production-ready lifespan —Å –ø–æ–ª–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π"""
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ VK Comments Parser v1.6.0 (DDD + Middleware)...")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    try:
        await init_db()
        logger.info("üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î: {e}")
        raise

    logger.info("‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!")
    logger.info("üìã API v1.5.0 –¥–æ—Å—Ç—É–ø–µ–Ω: /api/v1")
    logger.info("üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: /docs")

    yield

    logger.info("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ VK Comments Parser...")


# –°–æ–∑–¥–∞–Ω–∏–µ production-ready FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app = FastAPI(
    title="VK Comments Parser API",
    version="1.6.0",
    description="""
    üöÄ **Enterprise-grade VK Comments Parser API v1.6.0**

    ## üèóÔ∏è **DDD Architecture + Middleware**
    –ü–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å **Domain-Driven Design** –∏ enterprise-grade middleware

    ## ‚ú® –ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ v1.6.0:
    - üèóÔ∏è **Domain-Driven Design** - —á–∏—Å—Ç–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å Domain + Application —Å–ª–æ—è–º–∏
    - üõ°Ô∏è **Rate Limiting** - –∑–∞—â–∏—Ç–∞ –æ—Ç –ø–µ—Ä–µ–≥—Ä—É–∑–æ–∫ (60 –∑–∞–ø—Ä–æ—Å–æ–≤/–º–∏–Ω—É—Ç—É)
    - üìä **Request Logging** - —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    - üéØ **Standardized Responses** - —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏
    - ‚ö° **Performance Monitoring** - –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    - üîç **Request ID Tracking** - –ø–æ–ª–Ω–æ–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤
    - üè• **Advanced Health Checks** - readiness/liveness –ø—Ä–æ–≤–µ—Ä–∫–∏
    - ‚öôÔ∏è **Settings Management** - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
    - üìã **Error Reporting** - —Å–∏—Å—Ç–µ–º–∞ –æ—Ç—á–µ—Ç–æ–≤ –æ–± –æ—à–∏–±–∫–∞—Ö
    - üìà **Monitoring System** - –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ VK –≥—Ä—É–ø–ø
    - üî§ **Morphological Analysis** - –º–æ—Ä—Ñ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞

    ## üìö API Endpoints:
    - **Comments**: `/api/v1/comments` - —Ä–∞–±–æ—Ç–∞ —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏
    - **Groups**: `/api/v1/groups` - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø–∞–º–∏ VK
    - **Keywords**: `/api/v1/keywords` - –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
    - **Parser**: `/api/v1/parser` - –ø–∞—Ä—Å–∏–Ω–≥ –¥–∞–Ω–Ω—ã—Ö
    - **Health**: `/api/v1/health` - —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è
    - **Settings**: `/api/v1/settings` - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    - **Errors**: `/api/v1/reports` - –æ—Ç—á–µ—Ç—ã –æ–± –æ—à–∏–±–∫–∞—Ö
    - **Monitoring**: `/api/v1/monitoring` - –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≥—Ä—É–ø–ø
    - **Morphological**: `/api/v1/morphological` - –º–æ—Ä—Ñ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑

    ## üîß Enterprise-grade –£–ª—É—á—à–µ–Ω–∏—è:
    - **DDD Architecture** - Domain + Application —Å–ª–æ–∏ –¥–ª—è —á–∏—Å—Ç–æ—Ç—ã –∫–æ–¥–∞
    - **Middleware Stack** - rate limiting, logging, caching
    - **Standardized API** - —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –∏ –æ—à–∏–±–∫–∏
    - **Production Monitoring** - health checks, –º–µ—Ç—Ä–∏–∫–∏, –ª–æ–≥–∏
    - **Error Handling** - –∫–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
    - **Request Tracking** - –ø–æ–ª–Ω–∞—è —Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤
    - **Performance Headers** - –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ –∫–∞–∂–¥–æ–º –æ—Ç–≤–µ—Ç–µ

    ## üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:
    - **Swagger UI**: `/docs`
    - **ReDoc**: `/redoc`
    - **OpenAPI**: `/openapi.json`
    """,
    lifespan=lifespan,
    docs_url="/docs",
    redoc_url="/redoc",
    openapi_url="/openapi.json",
)


# üéØ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
@app.exception_handler(BaseAPIException)
async def handle_base_api_exception(request: Request, exc: BaseAPIException):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–∞—Å—Ç–æ–º–Ω—ã—Ö API –∏—Å–∫–ª—é—á–µ–Ω–∏–π"""
    return await base_exception_handler(request, exc)


@app.exception_handler(ValidationError)
async def handle_validation_error(request: Request, exc: ValidationError):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏"""
    return await validation_exception_handler(request, exc)


@app.exception_handler(VKAPIError)
async def handle_vk_api_error(request: Request, exc: VKAPIError):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ VK API"""
    return await vk_api_exception_handler(request, exc)


@app.exception_handler(DatabaseError)
async def handle_database_error(request: Request, exc: DatabaseError):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    return await database_exception_handler(request, exc)


@app.exception_handler(CacheError)
async def handle_cache_error(request: Request, exc: CacheError):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –∫—ç—à–∞"""
    return await cache_exception_handler(request, exc)


@app.exception_handler(RateLimitError)
async def handle_rate_limit_error(request: Request, exc: RateLimitError):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏"""
    return await rate_limit_exception_handler(request, exc)


@app.exception_handler(ServiceUnavailableError)
async def handle_service_unavailable(
    request: Request, exc: ServiceUnavailableError
):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞"""
    return await base_exception_handler(request, exc)


@app.exception_handler(HTTPException)
async def handle_http_exception(request: Request, exc: HTTPException):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö HTTP –∏—Å–∫–ª—é—á–µ–Ω–∏–π"""
    return JSONResponse(
        status_code=exc.status_code,
        content={
            "error": {
                "code": "HTTP_EXCEPTION",
                "message": exc.detail,
                "status_code": exc.status_code,
            }
        },
    )


@app.exception_handler(Exception)
async def handle_unexpected_error(request: Request, exc: Exception):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫"""
    return await generic_exception_handler(request, exc)


# üõ°Ô∏è Middleware (–¥–æ–±–∞–≤–ª—è–µ–º –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ)
app.add_middleware(
    CORSMiddleware,
    allow_origins=settings.cors_origins,
    allow_credentials=True,
    allow_methods=["GET", "POST", "PUT", "DELETE", "OPTIONS"],
    allow_headers=["*"],
)

# –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—à–µ middleware
app.add_middleware(RequestLoggingMiddleware)
app.add_middleware(SimpleRateLimitMiddleware, requests_per_minute=60)

# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä—ã
app.include_router(api_router, prefix="/api/v1")

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
if __name__ == "__main__":
    import uvicorn

    uvicorn.run(
        "app.main:app",
        host="0.0.0.0",
        port=8000,
        reload=settings.debug,
    )
