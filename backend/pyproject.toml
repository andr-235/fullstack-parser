[tool.black]
line-length = 79
target-version = ['py311']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 79

[tool.ruff]
line-length = 79
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = false
disallow_any_generics = false
disallow_untyped_defs = false
follow_imports = "silent"
strict_optional = false
warn_redundant_casts = false
warn_unused_ignores = false
disallow_any_unimported = false
no_implicit_optional = false
warn_return_any = false
disallow_subclassing_any = false
ignore_missing_imports = true
disable_error_code = ["assignment", "arg-type", "attr-defined"]
files = ["src"]
exclude = ["^tests/"]
explicit_package_bases = true

[[tool.mypy.overrides]]
module = [
    "vk_api.*",
]
ignore_missing_imports = true


[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B601"]

[tool.pytest.ini_options]
addopts = "-ra"
testpaths = ["tests"]
pythonpath = ["src"]

[tool.poetry]
name = "backend"
version = "0.1.0"
description = "FastAPI backend for fullstack-parser"
authors = ["Your Name <you@example.com>"]
readme = "README.md"
packages = [{include = "src", from = "."}]

[tool.poetry.dependencies]
python = ">=3.11,<4.0"
fastapi = "0.116.1"
uvicorn = {extras = ["standard"], version = "0.35.0"}
pydantic = ">=2.5.0,<3.0.0"
pydantic-settings = "2.1.0"
sqlalchemy = ">=2.0.25"
alembic = {extras = ["tz"], version = ">=1.13.0"}
asyncpg = "0.30.0"
httpx = "0.26.0"
aiohttp = ">=3.9.0"
psutil = ">=7.0.0"
celery = {extras = ["redis"], version = ">=5.4.0"}
structlog = ">=25.4.0"
loguru = ">=0.7.2"
pymorphy2 = ">=0.9.1"
python-multipart = ">=0.0.20"
passlib = ">=1.7.4"
python-jose = {extras = ["cryptography"], version = ">=3.5.0"}
PyJWT = ">=2.8.0"
email-validator = ">=2.3.0"
redis = ">=5.0.0"
flower = ">=2.0.1"
sentry-sdk = {extras = ["fastapi", "sqlalchemy", "redis", "celery"], version = ">=1.40.0"}
pydantic-extra-types = {extras = ["email"], version = "^2.10.5"}
password-validator = "^1.0"
slowapi = ">=0.1.9"
bcrypt = ">=4.0.0"

[tool.poetry.group.dev.dependencies]
pytest = ">=8.4.1"
pytest-cov = "4.1.0"
pytest-mock = "3.14.1"
httpx = "0.26.0"
black = "25.1.0"
isort = "5.13.2"
ruff = "0.12.1"
mypy = "1.8.0"
bandit = {extras = ["toml"], version = ">=1.7.6"}
python-dotenv = "1.1.1"
watchdog = "3.0.0"
types-passlib = ">=1.7.7.20250602"
psycopg2-binary = ">=2.9.9"
pytest-env = ">=1.1.5"
pytest-aio = ">=1.9.0"
pip-audit = ">=2.9.0"
pytest-xdist = ">=3.8.0"
types-croniter = "*"
pytest-asyncio = ">=1.1.0"

[tool.poetry.scripts]
# Database migration commands
migrate = "alembic:upgrade head"
makemigrations = "alembic:revision --autogenerate"
downgrade = "alembic:downgrade -1"
migration-history = "alembic:history"
migration-current = "alembic:current"
migration-stamp = "alembic:stamp"
migration-merge = "alembic:merge"
migration-show = "alembic:show"

# Alembic configuration for best practices 2025
[tool.alembic]
# Source code organization
script_location = "alembic"
prepend_sys_path = [".", "src"]
timezone = "UTC"
truncate_slug_length = 40
revision_environment = true
recursive_version_locations = false
output_encoding = "utf-8"
path_separator = "os"
sourceless = false

# Post-write hooks for code quality
[[tool.alembic.post_write_hooks]]
name = "black"
type = "console_scripts"
entrypoint = "black"
options = "-l 79 REVISION_SCRIPT_FILENAME"

[[tool.alembic.post_write_hooks]]
name = "ruff"
type = "exec"
executable = "ruff"
options = "check --fix REVISION_SCRIPT_FILENAME"
cwd = "."


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
