#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏

–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
–≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å fastapi-best-practices
"""

import os
import sys
from pathlib import Path


def check_structure():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞"""

    base_path = Path("/opt/app/backend")
    src_path = base_path / "src"

    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞ VK Comments Parser")
    print("=" * 50)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    required_dirs = [
        "src",
        "src/auth",
        "src/comments",
        "src/groups",
        "src/parser",
        "src/monitoring",
        "src/morphological",
        "src/keywords",
        "tests",
        "tests/auth",
        "tests/comments",
        "tests/groups",
        "tests/parser",
        "tests/monitoring",
        "tests/morphological",
        "requirements",
        "alembic",
    ]

    print("üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π:")
    all_dirs_ok = True

    for dir_path in required_dirs:
        full_path = base_path / dir_path
        if full_path.exists():
            print(f"  ‚úÖ {dir_path}")
        else:
            print(f"  ‚ùå {dir_path} - –ù–ï –ù–ê–ô–î–ï–ù")
            all_dirs_ok = False

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    required_global_files = [
        "src/__init__.py",
        "src/main.py",
        "src/config.py",
        "src/database.py",
        "src/exceptions.py",
        "src/models.py",
        "src/pagination.py",
        "requirements/base.txt",
        "requirements/dev.txt",
        "requirements/prod.txt",
        "pyproject.toml",
        "alembic.ini",
    ]

    print("\nüìÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤:")
    all_global_files_ok = True

    for file_path in required_global_files:
        full_path = base_path / file_path
        if full_path.exists():
            print(f"  ‚úÖ {file_path}")
        else:
            print(f"  ‚ùå {file_path} - –ù–ï –ù–ê–ô–î–ï–ù")
            all_global_files_ok = False

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –º–æ–¥—É–ª–µ–π
    modules = [
        "auth",
        "comments",
        "groups",
        "parser",
        "monitoring",
        "morphological",
        "keywords",
        "vk_api",
        "settings",
        "health",
        "error_reporting",
    ]
    required_module_files = [
        "router.py",
        "schemas.py",
        "models.py",
        "dependencies.py",
        "config.py",
        "constants.py",
        "exceptions.py",
        "service.py",
        "utils.py",
    ]

    # –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è –º–æ–¥—É–ª–µ–π
    special_files = {
        "parser": ["client.py"],
        "vk_api": ["client.py"],
    }

    print("\nüèóÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –º–æ–¥—É–ª–µ–π:")
    all_module_files_ok = True

    for module in modules:
        module_path = src_path / module
        if not module_path.exists():
            print(f"  ‚ùå –ú–æ–¥—É–ª—å {module} - –î–ò–†–ï–ö–¢–û–†–ò–Ø –ù–ï –ù–ê–ô–î–ï–ù–ê")
            all_module_files_ok = False
            continue

        print(f"  üì¶ –ú–æ–¥—É–ª—å {module}:")

        for file_name in required_module_files:
            file_path = module_path / file_name
            if file_path.exists():
                print(f"    ‚úÖ {file_name}")
            else:
                print(f"    ‚ùå {file_name} - –ù–ï –ù–ê–ô–î–ï–ù")
                all_module_files_ok = False

        # –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –º–æ–¥—É–ª–µ–π —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏
        if module in special_files:
            for special_file in special_files[module]:
                file_path = module_path / special_file
                if file_path.exists():
                    print(f"    ‚úÖ {special_file} (—Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π)")
                else:
                    print(f"    ‚ùå {special_file} (—Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π) - –ù–ï –ù–ê–ô–î–ï–ù")
                    all_module_files_ok = False

    # –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print("\n" + "=" * 50)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–†–û–í–ï–†–ö–ò:")

    if all_dirs_ok and all_global_files_ok and all_module_files_ok:
        print("‚úÖ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        print("üéâ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç fastapi-best-practices")
        return True
    else:
        print("‚ùå –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´!")
        if not all_dirs_ok:
            print("  - –ü—Ä–æ–±–ª–µ–º—ã —Å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è–º–∏")
        if not all_global_files_ok:
            print("  - –ü—Ä–æ–±–ª–µ–º—ã —Å –≥–ª–æ–±–∞–ª—å–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏")
        if not all_module_files_ok:
            print("  - –ü—Ä–æ–±–ª–µ–º—ã —Å —Ñ–∞–π–ª–∞–º–∏ –º–æ–¥—É–ª–µ–π")
        return False


def check_file_sizes():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–∑–º–µ—Ä—ã —Ñ–∞–π–ª–æ–≤ (–±–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞)"""

    print("\nüìè –ü–†–û–í–ï–†–ö–ê –†–ê–ó–ú–ï–†–û–í –§–ê–ô–õ–û–í:")

    important_files = [
        "src/main.py",
        "src/config.py",
        "src/database.py",
        "src/exceptions.py",
        "src/models.py",
        "requirements/base.txt",
    ]

    for file_path in important_files:
        full_path = Path("/opt/app/backend") / file_path
        if full_path.exists():
            size = full_path.stat().st_size
            print(f"  üìÑ {file_path} - {size} –±–∞–π—Ç")
        else:
            print(f"  ‚ùå {file_path} - –§–ê–ô–õ –ù–ï –ù–ê–ô–î–ï–ù")


if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞...")

    success = check_structure()
    check_file_sizes()

    if success:
        print("\nüéä –ü–û–ó–î–†–ê–í–õ–Ø–ï–ú! –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!")
        print("üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("  1. –ù–∞—á–∞—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é –º–æ–¥—É–ª–µ–π (comments, groups, etc.)")
        print("  2. –°–æ–∑–¥–∞—Ç—å –º–æ–¥—É–ª—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ (auth)")
        print("  3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É")
        sys.exit(0)
    else:
        print("\nüí• –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´ –°–û –°–¢–†–£–ö–¢–£–†–û–ô!")
        print("üîß –ò—Å–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–æ–±–ª–µ–º—ã –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏")
        sys.exit(1)
