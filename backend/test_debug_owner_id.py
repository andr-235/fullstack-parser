#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ owner_id
"""

import asyncio

from app.core.config import settings
from app.services.vk_api_service import VKAPIService


async def test_debug_owner_id():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–ª–∞–¥–∫—É owner_id"""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ª–∞–¥–∫—É owner_id...")

    async with VKAPIService(
        token=settings.vk.access_token, api_version=settings.vk.api_version
    ) as vk_service:

        group_id = 43377172  # –†–ò–ê –ë–∏—Ä–æ–±–∏–¥–∂–∞–Ω
        post_id = 126563  # –ü–æ—Å—Ç —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º "–≥–∏–≤–∏"

        print(
            "\nüìã –¢–µ—Å—Ç 1: –ü—Ä—è–º–æ–π –≤—ã–∑–æ–≤ get_post_comments —Å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º owner_id"
        )
        try:
            comments = await vk_service.get_post_comments(
                owner_id=group_id,  # –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π ID
                post_id=post_id,
                count=10,
            )
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {len(comments)}")
            for i, comment in enumerate(comments, 1):
                print(
                    f"   {i}. ID: {comment.get('id')}, –¢–µ–∫—Å—Ç: {comment.get('text', '')[:50]}..."
                )
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

        print(
            "\nüìã –¢–µ—Å—Ç 2: –ü—Ä—è–º–æ–π –≤—ã–∑–æ–≤ get_post_comments —Å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º owner_id"
        )
        try:
            comments = await vk_service.get_post_comments(
                owner_id=-group_id,  # –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π ID
                post_id=post_id,
                count=10,
            )
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {len(comments)}")
            for i, comment in enumerate(comments, 1):
                print(
                    f"   {i}. ID: {comment.get('id')}, –¢–µ–∫—Å—Ç: {comment.get('text', '')[:50]}..."
                )
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

        print(
            "\nüìã –¢–µ—Å—Ç 3: –ü—Ä—è–º–æ–π –≤—ã–∑–æ–≤ get_all_post_comments —Å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º owner_id"
        )
        try:
            comments = await vk_service.get_all_post_comments(
                owner_id=group_id, post_id=post_id  # –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π ID
            )
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {len(comments)}")
            for i, comment in enumerate(comments, 1):
                print(
                    f"   {i}. ID: {comment.get('id')}, –¢–µ–∫—Å—Ç: {comment.get('text', '')[:50]}..."
                )
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

        print(
            "\nüìã –¢–µ—Å—Ç 4: –ü—Ä—è–º–æ–π –≤—ã–∑–æ–≤ get_all_post_comments —Å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º owner_id"
        )
        try:
            comments = await vk_service.get_all_post_comments(
                owner_id=-group_id, post_id=post_id  # –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π ID
            )
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {len(comments)}")
            for i, comment in enumerate(comments, 1):
                print(
                    f"   {i}. ID: {comment.get('id')}, –¢–µ–∫—Å—Ç: {comment.get('text', '')[:50]}..."
                )
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")


if __name__ == "__main__":
    asyncio.run(test_debug_owner_id())
