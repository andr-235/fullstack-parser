#!/usr/bin/env ts-node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è baseline –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –ë–î
 *
 * –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç:
 * 1. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –ë–î
 * 2. –°–æ–∑–¥–∞–µ—Ç baseline –º–∏–≥—Ä–∞—Ü–∏—é —Å —Ç–µ–∫—É—â–µ–π —Å—Ö–µ–º–æ–π
 * 3. –ü–æ–º–µ—á–∞–µ—Ç –º–∏–≥—Ä–∞—Ü–∏—é –∫–∞–∫ –ø—Ä–∏–º–µ–Ω–µ–Ω–Ω—É—é (–Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç)
 *
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏ —Å Sequelize –Ω–∞ Prisma
 */

import { execSync } from 'child_process';
import { existsSync, mkdirSync } from 'fs';
import path from 'path';

const PRISMA_DIR = path.join(__dirname);
const MIGRATIONS_DIR = path.join(PRISMA_DIR, 'migrations');

async function createBaselineMigration() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');

    // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –º–∏–≥—Ä–∞—Ü–∏–π –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if (!existsSync(MIGRATIONS_DIR)) {
      mkdirSync(MIGRATIONS_DIR, { recursive: true });
      console.log('üìÅ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –º–∏–≥—Ä–∞—Ü–∏–π');
    }

    // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ø–µ—Ä–≤–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏
    const initMigrationDir = path.join(MIGRATIONS_DIR, '0_init');
    if (!existsSync(initMigrationDir)) {
      mkdirSync(initMigrationDir, { recursive: true });
      console.log('üìÅ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è baseline –º–∏–≥—Ä–∞—Ü–∏–∏');
    }

    console.log('üìã –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Prisma Client...');
    try {
      execSync('npx prisma generate', { stdio: 'inherit' });
      console.log('‚úÖ Prisma Client —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω');
    } catch (error) {
      console.log('‚ö†Ô∏è  –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º...');
    }

    console.log('üìã –°–æ–∑–¥–∞–Ω–∏–µ baseline –º–∏–≥—Ä–∞—Ü–∏–∏...');

    // –°–æ–∑–¥–∞–µ–º baseline –º–∏–≥—Ä–∞—Ü–∏—é –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –ë–î
    try {
      execSync('npx prisma migrate dev --name init --create-only', { stdio: 'inherit' });
      console.log('‚úÖ Baseline –º–∏–≥—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞');
    } catch (error) {
      console.log('‚ö†Ô∏è  –°–æ–∑–¥–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ dev –Ω–µ —É–¥–∞–ª–æ—Å—å, –ø—Ä–æ–±—É–µ–º –¥—Ä—É–≥–æ–π —Å–ø–æ—Å–æ–±...');

      // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± - —Å–æ–∑–¥–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –≤—Ä—É—á–Ω—É—é
      execSync('npx prisma db push', { stdio: 'inherit' });
      console.log('‚úÖ –°—Ö–µ–º–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —Å –ë–î');
    }

    console.log('‚úÖ Baseline –º–∏–≥—Ä–∞—Ü–∏—è –≥–æ—Ç–æ–≤–∞');
    console.log('');
    console.log('üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
    console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π: npx prisma migrate status');
    console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Prisma Client: npx prisma generate');
    console.log('3. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏: npx prisma migrate dev');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ baseline –º–∏–≥—Ä–∞—Ü–∏–∏:', error);
    console.log('');
    console.log('üîß –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:');
    console.log('1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ PostgreSQL –∑–∞–ø—É—â–µ–Ω –∏ –¥–æ—Å—Ç—É–ø–µ–Ω');
    console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è DATABASE_URL –≤ .env —Ñ–∞–π–ª–µ');
    console.log('3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö vk_analyzer —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    console.log('4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
    console.log('5. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã –≤—Ä—É—á–Ω—É—é:');
    console.log('   - npx prisma db push');
    console.log('   - npx prisma generate');
    process.exit(1);
  }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  createBaselineMigration();
}

export default createBaselineMigration;