#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ —Ç–æ–∫–µ–Ω–∞ VK API
"""

import asyncio
import httpx
from app.core.config import settings


async def check_vk_token():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∞–≤–∞ —Ç–æ–∫–µ–Ω–∞ VK API"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ VK API...")
    print(
        f"–¢–æ–∫–µ–Ω: {settings.vk.access_token[:10]}...{settings.vk.access_token[-10:]}"
    )
    print(f"–í–µ—Ä—Å–∏—è API: {settings.vk.api_version}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–∫–µ–Ω–µ
    url = "https://api.vk.com/method/account.getInfo"
    params = {
        "access_token": settings.vk.access_token,
        "v": settings.vk.api_version,
    }

    try:
        async with httpx.AsyncClient() as client:
            response = await client.get(url, params=params)
            data = response.json()

            if "error" in data:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–æ–∫–µ–Ω–∞: {data['error']}")
                return False

            print("‚úÖ –¢–æ–∫–µ–Ω –≤–∞–ª–∏–¥–µ–Ω")
            print(f"   –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: {data.get('response', {})}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞: {e}")
        return False

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –≥—Ä—É–ø–ø—ã
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –Ω–∞ –≥—Ä—É–ø–ø—ã...")
    url = "https://api.vk.com/method/groups.get"
    params = {
        "access_token": settings.vk.access_token,
        "v": settings.vk.api_version,
        "extended": 1,
        "count": 1,
    }

    try:
        async with httpx.AsyncClient() as client:
            response = await client.get(url, params=params)
            data = response.json()

            if "error" in data:
                print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –≥—Ä—É–ø–ø–∞–º: {data['error']}")
            else:
                print("‚úÖ –ü—Ä–∞–≤–∞ –Ω–∞ –≥—Ä—É–ø–ø—ã: OK")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥—Ä—É–ø–ø: {e}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –≥—Ä—É–ø–ø–µ
    print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –≥—Ä—É–ø–ø–µ riabirobidzhan (43377172)...")
    url = "https://api.vk.com/method/wall.get"
    params = {
        "access_token": settings.vk.access_token,
        "v": settings.vk.api_version,
        "owner_id": -43377172,
        "count": 1,
    }

    try:
        async with httpx.AsyncClient() as client:
            response = await client.get(url, params=params)
            data = response.json()

            if "error" in data:
                print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å—Ç–µ–Ω–µ –≥—Ä—É–ø–ø—ã: {data['error']}")
            else:
                print("‚úÖ –î–æ—Å—Ç—É–ø –∫ —Å—Ç–µ–Ω–µ –≥—Ä—É–ø–ø—ã: OK")
                posts_count = data.get("response", {}).get("count", 0)
                print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤: {posts_count}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–µ–Ω—ã: {e}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ—Å—Ç–∞
    print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º –ø–æ—Å—Ç–∞ 126563...")
    url = "https://api.vk.com/method/wall.getComments"
    params = {
        "access_token": settings.vk.access_token,
        "v": settings.vk.api_version,
        "owner_id": -43377172,
        "post_id": 126563,
        "count": 1,
    }

    try:
        async with httpx.AsyncClient() as client:
            response = await client.get(url, params=params)
            data = response.json()

            if "error" in data:
                error_code = data["error"].get("error_code", "unknown")
                error_msg = data["error"].get("error_msg", "unknown")
                print(
                    f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º: {error_code} - {error_msg}"
                )

                if error_code == 15:
                    print(
                        "   üí° –ö–æ–¥ 15: Access denied - –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"
                    )
                    print("   –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
                    print("   - –ì—Ä—É–ø–ø–∞ –∑–∞–∫—Ä—ã—Ç–∞ –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤")
                    print("   - –¢–æ–∫–µ–Ω –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —á—Ç–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤")
                    print("   - –ü–æ—Å—Ç –∑–∞–∫—Ä—ã—Ç –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤")
                    print("   - –¢—Ä–µ–±—É–µ—Ç—Å—è –±—ã—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –≥—Ä—É–ø–ø—ã")
            else:
                print("‚úÖ –î–æ—Å—Ç—É–ø –∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º: OK")
                comments_count = data.get("response", {}).get("count", 0)
                print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {comments_count}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {e}")

    print("\nüìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ —Ç–æ–∫–µ–Ω–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö VK –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    print("2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–æ–∫–µ–Ω –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞: groups, wall, comments")
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏ –≥—Ä—É–ø–ø—ã riabirobidzhan")
    print(
        "4. –í–æ–∑–º–æ–∂–Ω–æ, —Ç—Ä–µ–±—É–µ—Ç—Å—è –±—ã—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –≥—Ä—É–ø–ø—ã –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º"
    )


if __name__ == "__main__":
    asyncio.run(check_vk_token())
