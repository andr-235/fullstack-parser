#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ VKBottleService –≤ arq worker
"""

import asyncio

from app.core.config import settings
from app.services.vkbottle_service import VKBottleService


async def test_vk_in_worker():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç VKBottleService –≤ arq worker"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ VKBottleService –≤ arq worker...")
    print(f"–¢–æ–∫–µ–Ω –∏–∑ settings: {settings.vk.access_token[:20]}...")

    try:
        vk_service = VKBottleService(
            token=settings.vk.access_token, api_version=settings.vk.api_version
        )

        print("‚úÖ VKBottleService —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
        comments = await vk_service.get_all_post_comments(
            owner_id=-43377172, post_id=126563
        )

        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {len(comments)}")

        # –ò—â–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Å "–≥–∏–≤–∏"
        for comment in comments:
            text = comment.get("text", "").lower()
            if "–≥–∏–≤–∏" in text:
                print(
                    f"‚úÖ –ù–∞–π–¥–µ–Ω –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å '–≥–∏–≤–∏': {comment.get('text', '')[:100]}..."
                )
                print(
                    f"   ID: {comment.get('id')}, –∞–≤—Ç–æ—Ä: {comment.get('from_id')}"
                )

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback

        traceback.print_exc()


if __name__ == "__main__":
    asyncio.run(test_vk_in_worker())
