# üöÄ –£–ø—Ä–æ—â—ë–Ω–Ω—ã–π Makefile –¥–ª—è –æ–¥–Ω–æ–≥–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
.PHONY: dev test build deploy status logs clean help

# üéØ –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
dev: ## –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "üöÄ –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	docker compose up -d
	@echo "‚úÖ –°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã! Frontend: http://localhost:3000, Backend: http://localhost:8000"

test: ## –ë—ã—Å—Ç—Ä—ã–µ —Ç–µ—Å—Ç—ã
	@echo "üß™ –ó–∞–ø—É—Å–∫ –±—ã—Å—Ç—Ä—ã—Ö —Ç–µ—Å—Ç–æ–≤..."
	@cd backend && poetry run pytest tests/ -v --tb=short --maxfail=3
	@cd frontend && pnpm test --passWithNoTests --watchAll=false
	@echo "‚úÖ –¢–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã!"

build: ## –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤
	@echo "üèóÔ∏è –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."
	docker compose build
	@echo "‚úÖ –û–±—Ä–∞–∑—ã —Å–æ–±—Ä–∞–Ω—ã!"

deploy: ## –î–µ–ø–ª–æ–π –≤ production
	@echo "üöÄ –î–µ–ø–ª–æ–π –≤ production..."
	@read -p "–¢—ã —É–≤–µ—Ä–µ–Ω? –≠—Ç–æ –∑–∞–¥–µ–ø–ª–æ–∏—Ç –≤ production! (y/N): " confirm; \
	if [ "$$confirm" = "y" ] || [ "$$confirm" = "Y" ]; then \
		git push origin main; \
		echo "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–ø—É—â–µ–Ω! –°–ª–µ–¥–∏ –∑–∞ CI/CD pipeline"; \
	else \
		echo "‚ùå –î–µ–ø–ª–æ–π –æ—Ç–º–µ–Ω—ë–Ω"; \
	fi

status: ## –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
	docker compose ps
	@echo ""
	@echo "üîç –õ–æ–≥–∏ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ—à–∏–±–æ–∫:"
	docker compose logs --tail=10 --no-color | grep -i error || echo "–û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"

logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏
	@echo "üìù –õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–æ–≤:"
	docker compose logs -f

clean: ## –û—á–∏—Å—Ç–∫–∞
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ Docker..."
	docker compose down
	docker system prune -f
	docker image prune -f
	@echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

# üîß –£—Ç–∏–ª–∏—Ç—ã
branch: ## –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –≤–µ—Ç–∫—É
	@read -p "–ù–∞–∑–≤–∞–Ω–∏–µ –≤–µ—Ç–∫–∏ (–±–µ–∑ feature/): " name; \
	git checkout -b feature/$$name
	@echo "‚úÖ –°–æ–∑–¥–∞–Ω–∞ –≤–µ—Ç–∫–∞ feature/$$name"

commit: ## –ö–æ–º–º–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π
	@read -p "–¢–∏–ø –∫–æ–º–º–∏—Ç–∞ (feat/fix/docs/style/refactor/test/chore): " type; \
	read -p "–û–ø–∏—Å–∞–Ω–∏–µ: " desc; \
	git add . && git commit -m "$$type: $$desc"
	@echo "‚úÖ –ö–æ–º–º–∏—Ç —Å–æ–∑–¥–∞–Ω!"

push: ## –ü—É—à –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
	@git push origin HEAD
	@echo "‚úÖ –ö–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π!"

pr: ## –°–æ–∑–¥–∞—Ç—å Pull Request
	@echo "üîó –°–æ–∑–¥–∞–Ω–∏–µ Pull Request..."
	@gh pr create --fill
	@echo "‚úÖ Pull Request —Å–æ–∑–¥–∞–Ω!"

# üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "üöÄ –£–ø—Ä–æ—â—ë–Ω–Ω—ã–π Makefile –¥–ª—è –æ–¥–Ω–æ–≥–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞"
	@echo ""
	@echo "–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@echo "  make dev      - –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
	@echo "  make test     - –ë—ã—Å—Ç—Ä—ã–µ —Ç–µ—Å—Ç—ã"
	@echo "  make build    - –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤"
	@echo "  make deploy   - –î–µ–ø–ª–æ–π –≤ production"
	@echo "  make status   - –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤"
	@echo "  make logs     - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
	@echo "  make clean    - –û—á–∏—Å—Ç–∫–∞ Docker"
	@echo ""
	@echo "Git –∫–æ–º–∞–Ω–¥—ã:"
	@echo "  make branch   - –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –≤–µ—Ç–∫—É"
	@echo "  make commit   - –ö–æ–º–º–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π"
	@echo "  make push     - –ü—É—à –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"
	@echo "  make pr       - –°–æ–∑–¥–∞—Ç—å Pull Request"
	@echo ""
	@echo "–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:"
	@echo "  make dev      # –ó–∞–ø—É—Å–∫ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
	@echo "  make test     # –¢–µ—Å—Ç—ã"
	@echo "  make deploy   # –î–µ–ø–ª–æ–π –≤ production"
