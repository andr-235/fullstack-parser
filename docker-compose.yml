services:
  postgres:
    image: postgres:15-alpine
    container_name: fullstack_dev_postgres
    restart: unless-stopped
    env_file:
      - ./frontend/.env.local
    environment:
      POSTGRES_DB: ${DB_NAME:-vk_parser}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: fullstack_dev_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - dev-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: dev
    container_name: fullstack_dev_backend
    restart: unless-stopped
    env_file:
      - ./frontend/.env.local
    environment:
      - ENV=development
      - DATABASE_URL=postgresql+asyncpg://${DB_USER:-postgres}:${DB_PASSWORD:-postgres}@postgres:5432/${DB_NAME:-vk_parser}
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key}
      - VK_ACCESS_TOKEN=${VK_ACCESS_TOKEN:-dev-vk-token}
      - VK_API_VERSION=${VK_API_VERSION:-5.131}
      - LOG_LEVEL=${LOG_LEVEL:-DEBUG}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - dev-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: dev
    container_name: fullstack_dev_frontend
    restart: unless-stopped
    env_file:
      - ./frontend/.env.local
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    depends_on:
      - backend
    networks:
      - dev-network
    command: pnpm dev

  arq_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: dev
    container_name: fullstack_dev_arq_worker
    command: python -m app.workers.arq_worker
    env_file:
      - ./frontend/.env.local
    environment:
      - ENV=development
      - DATABASE_URL=postgresql+asyncpg://${DB_USER:-postgres}:${DB_PASSWORD:-postgres}@postgres:5432/${DB_NAME:-vk_parser}
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key}
      - VK_ACCESS_TOKEN=${VK_ACCESS_TOKEN:-dev-vk-token}
      - VK_API_VERSION=${VK_API_VERSION:-5.131}
      - LOG_LEVEL=${LOG_LEVEL:-DEBUG}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - dev-network

networks:
  dev-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
