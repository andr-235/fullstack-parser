services:
  postgres:
    image: ghcr.io/postgres/postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - default

  redis:
    image: ghcr.io/redis/redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - ./redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - default

  api:
    build:
      context: ./backend
      args:
        - TARGET=api
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8080:8080"
    command: ["/app/api"]
    env_file:
      - .env
    networks:
      - default

  worker:
    build:
      context: ./backend
      args:
        - TARGET=worker
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ["/app/worker"]
    env_file:
      - .env
    networks:
      - default

  # Frontend сервис: Vue 3 приложение, собранное с Bun и обслуживаемое Nginx
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:80"
    depends_on:
      # Зависит от API сервиса
      api:
        condition: service_started
    env_file:
      - .env
    networks:
      - default

networks:
  default:
    driver: bridge