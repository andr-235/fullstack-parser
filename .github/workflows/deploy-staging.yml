# üöÄ Deploy to Staging

on:
  push:
    branches:
      - develop
  workflow_dispatch:

concurrency:
  group: staging
  cancel-in-progress: true

jobs:
  deploy:
    name: üöö Deploy to Staging
    runs-on: ubuntu-latest
    timeout-minutes: 15
    environment:
      name: staging
      url: https://staging.your-domain.com
    permissions:
      contents: read
    steps:
      - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ secrets
        run: |
          test -n "${{ secrets.STAGING_HOST }}" || (echo "–ù–µ—Ç STAGING_HOST" && exit 1)
          test -n "${{ secrets.STAGING_USER }}" || (echo "–ù–µ—Ç STAGING_USER" && exit 1)
          test -n "${{ secrets.STAGING_SSH_KEY }}" || (echo "–ù–µ—Ç STAGING_SSH_KEY" && exit 1)
          test -n "${{ secrets.STAGING_PORT }}" || (echo "–ù–µ—Ç STAGING_PORT" && exit 1)
          test -n "${{ secrets.STAGING_APP_DIR }}" || (echo "–ù–µ—Ç STAGING_APP_DIR" && exit 1)

      - name: Checkout repository
        uses: actions/checkout@v4.1.1

      - name: Deploy to Staging Server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USER }}
          key: ${{ secrets.STAGING_SSH_KEY }}
          port: ${{ secrets.STAGING_PORT }}
          script: |
            set -euo pipefail
            cd ${{ secrets.STAGING_APP_DIR }}
            git config --global --add safe.directory ${{ secrets.STAGING_APP_DIR }}
            git pull origin develop
            echo "DOCKER_PROD_IMAGE_BACKEND=ghcr.io/${{ github.repository_owner }}/backend:sha-${GITHUB_SHA::7}" >> .env
            echo "DOCKER_PROD_IMAGE_FRONTEND=ghcr.io/${{ github.repository_owner }}/frontend:sha-${GITHUB_SHA::7}" >> .env
            docker-compose -f docker-compose.prod.yml up -d --build
            
      - name: Health Check
        run: |
          for i in {1..10}; do
            if curl -fsSL https://staging.your-domain.com && curl -fsSL https://staging.your-domain.com/api/v1/; then
              echo "‚úÖ Staging is healthy"
              exit 0
            fi
            sleep 5
          done
          echo "‚ùå Staging healthcheck failed"
          exit 1

      # - name: Slack/Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
      #   run: |
      #     curl -X POST -H 'Content-type: application/json' --data '{"text":"Staging deploy –∑–∞–≤–µ—Ä—à—ë–Ω —É—Å–ø–µ—à–Ω–æ!"}' $SLACK_WEBHOOK_URL

      # - name: –û—Ç–∫–∞—Ç –¥–µ–ø–ª–æ—è (manual workflow, –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –≤ README)
      #   run: |
      #     # docker-compose -f docker-compose.prod.yml up -d --remove-orphans <PREVIOUS_TAG> 