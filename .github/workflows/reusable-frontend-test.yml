name: Reusable Frontend Tests

on:
  workflow_call:

env:
  NODE_VERSION_DEFAULT: '20'

jobs:
  frontend-lint:
    name: üé® Frontend Lint
    runs-on: ubuntu-latest
    permissions:
      contents: write
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Get branch name
        id: get_branch
        run: echo "branch_name=${{ github.head_ref || github.ref_name }}" >> $GITHUB_OUTPUT

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.get_branch.outputs.branch_name }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: 'frontend/pnpm-lock.yaml'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run linting and apply fixes
        id: lint
        run: |
          git status --porcelain > before.txt
          pnpm lint --fix
          pnpm format --write
          git status --porcelain > after.txt
          if ! cmp -s before.txt after.txt; then
            echo "changes_detected=true" >> $GITHUB_OUTPUT
          else
            echo "changes_detected=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit changes
        if: steps.lint.outputs.changes_detected == 'true'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          git commit -m "style: auto-format frontend code"
          git push origin HEAD:${{ steps.get_branch.outputs.branch_name }}

  frontend-test:
    name: ‚öõÔ∏è Frontend Tests (${{ matrix.node-version }})
    runs-on: ubuntu-latest
    needs: frontend-lint
    strategy:
      fail-fast: false
      matrix:
        node-version: ['18', '20']
    defaults:
      run:
        working-directory: ./frontend
    env:
      NEXT_PUBLIC_API_URL: http://localhost:8000
      CI: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
          cache-dependency-path: 'frontend/pnpm-lock.yaml'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application
        run: pnpm run build

      - name: Run tests
        run: pnpm test -- --coverage --watchAll=false

      - name: Upload coverage to Codecov
        if: matrix.node-version == env.NODE_VERSION_DEFAULT
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./frontend/coverage/lcov.info
          flags: frontend
          fail_ci_if_error: false 