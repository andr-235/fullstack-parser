name: 🚀 Простой CI (Один разработчик)

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: 🧪 Тесты
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Backend - тесты
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: 📦 Backend - установка зависимостей
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: 🧪 Backend - запуск тестов
        working-directory: ./backend
        run: |
          poetry install --no-interaction --no-root
          poetry run pytest tests/ -v --tb=short

      - name: 🟢 Frontend - тесты
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.4

      - name: 📦 Frontend - установка зависимостей
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
          cache-dependency-path: "frontend/pnpm-lock.yaml"

      - name: 🧪 Frontend - запуск тестов
        working-directory: ./frontend
        run: |
          pnpm install --frozen-lockfile
          pnpm test --passWithNoTests --watchAll=false

  build:
    name: 🏗️ Сборка образов
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read
      packages: write

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: 🔐 Логин в GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: 🏗️ Сборка и пуш backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ghcr.io/andr-235/fullstack-backend:latest

      - name: 🏗️ Сборка и пуш frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          build-args: |
            NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}
          tags: ghcr.io/andr-235/fullstack-frontend:latest

      - name: 🚀 Деплой на сервер
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USER }}
          key: ${{ secrets.PRODUCTION_SSH_KEY }}
          script: |
            set -e
            cd ${{ secrets.PRODUCTION_APP_DIR }}

            echo "🔐 Логин в GitHub Container Registry..."
            echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin

            echo "📦 Загрузка образов..."
            docker compose -f docker-compose.prod.ip.yml pull

            echo "🚀 Запуск сервисов..."
            docker compose -f docker-compose.prod.ip.yml up -d --build

            echo "🧹 Очистка..."
            docker image prune -f || true

            echo "✅ Деплой завершён!"
