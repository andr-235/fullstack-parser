name: 🚀 Deploy to Production

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_BACKEND: ${{ github.repository }}/backend
  IMAGE_NAME_FRONTEND: ${{ github.repository }}/frontend

jobs:
  build:
    name: 🏗️ Build and Push Docker Images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      short_sha: ${{ steps.vars.outputs.sha }}

    steps:
      - name: ⬇️ Check out code
        uses: actions/checkout@v4

      - name: 🧮 Set reusable variables
        id: vars
        run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: 🔐 Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🏗️ Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BACKEND }}:${{ steps.vars.outputs.sha }}

      - name: 🏗️ Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_FRONTEND }}:${{ steps.vars.outputs.sha }}

  deploy:
    name: 🚚 Deploy to Production Server
    needs: build
    runs-on: self-hosted # <-- Используется ваш self-hosted runner

    steps:
      - name: 🚀 Deploy to Production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PRODUCTION_HOST }} # <-- IP вашего сервера
          username: ${{ secrets.PRODUCTION_USER }}
          key: ${{ secrets.PRODUCTION_SSH_KEY }}
          port: ${{ secrets.PRODUCTION_PORT }}
          script: |
            set -e # Exit immediately if a command exits with a non-zero status.

            echo "Changing to app directory..."
            cd ${{ secrets.PRODUCTION_APP_DIR }}

            echo "Configuring git safe.directory..."
            git config --global --add safe.directory ${{ secrets.PRODUCTION_APP_DIR }}

            echo "Pulling latest changes from main branch..."
            git pull origin main

            echo "Copying .env to .env.prod..."
            cp .env .env.prod
            echo "DOCKER_IMAGE_BACKEND=${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BACKEND }}:${{ needs.build.outputs.short_sha }}" >> .env.prod
            echo "DOCKER_IMAGE_FRONTEND=${{ env.REGISTRY }}/${{ env.IMAGE_NAME_FRONTEND }}:${{ needs.build.outputs.short_sha }}" >> .env.prod

            echo "Pulling images and starting containers..."
            docker-compose -f docker-compose.prod.ip.yml pull
            docker-compose -f docker-compose.prod.ip.yml up -d --remove-orphans

            echo "Cleaning up old Docker images..."
            docker image prune -af

            echo "✅ Deployment successful!"
