name: Lint and Autoformat (Reusable)

on:
  workflow_call:
    inputs:
      target:
        description: 'backend или frontend'
        required: true
        type: string
      python-version:
        description: 'Python version (для backend)'
        required: false
        default: '3.11'
        type: string
      node-version:
        description: 'Node.js version (для frontend)'
        required: false
        default: '20'
        type: string
    secrets:
      GITHUB_TOKEN:
        required: true

jobs:
  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Backend lint
        if: inputs.target == 'backend'
        uses: snok/install-poetry@v1
      - name: Set up Python
        if: inputs.target == 'backend'
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      - name: Load cached venv
        if: inputs.target == 'backend'
        uses: actions/cache@v4
        with:
          path: backend/.venv
          key: venv-${{ runner.os }}-${{ inputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies (backend)
        if: inputs.target == 'backend'
        working-directory: ./backend
        run: poetry install --no-interaction --no-root
      - name: Run linting (backend)
        if: inputs.target == 'backend'
        working-directory: ./backend
        run: |
          source .venv/bin/activate
          ruff check . --fix
          black .
          isort .
          mypy app/ || true

      - name: Frontend lint
        if: inputs.target == 'frontend'
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.4
      - name: Set up Node.js
        if: inputs.target == 'frontend'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: 'pnpm'
          cache-dependency-path: 'frontend/pnpm-lock.yaml'
      - name: Install dependencies (frontend)
        if: inputs.target == 'frontend'
        working-directory: ./frontend
        run: pnpm install --frozen-lockfile
      - name: Run linting (frontend)
        if: inputs.target == 'frontend'
        working-directory: ./frontend
        run: |
          pnpm lint --fix
          pnpm format --write 