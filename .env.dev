# Режим работы приложения (development или production)
# По умолчанию используется development для dev-окружения
MODE=development

# Файл docker-compose для использования в зависимости от режима
# Значение по умолчанию - файл для разработки
DOCKER_COMPOSE_FILE=docker-compose.dev.yml

# Database (настройки базы данных для PostgreSQL)
# Для использования в режиме разработки
POSTGRES_DB=vk_analyzer_dev
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
DB_URL=postgresql://postgres:postgres@postgres:5432/vk_analyzer_dev

# Frontend API URL (адрес API для Docker внутренней сети)
# Для использования в режиме разработки
VITE_API_URL=http://api:3000

# Настройки окружения
# ENVIRONMENT: должен быть development в dev-режиме
# DEBUG: включает отладочную информацию в dev-режиме
# LOG_LEVEL: уровень логирования (DEBUG, INFO, WARN, ERROR)
ENVIRONMENT=development
DEBUG=true
LOG_LEVEL=DEBUG

# VK API токен для доступа к API
# Для использования в режиме разработки
VK_TOKEN=vk1.a.e6QLkaSf6l0BvwIaIR0T0Lnkh3BcXJZkSYADH6QA1l2cZHv1I4fp2QxUREGptLSYB-ffHrB8lfmwfpCvbQhqp8CX9agGQkvyDNeKiXdYxMAy0p9X67jEneHHReWLILjNBEctiu11Q9a8jLiX2wgZu0PIVNmnuYSRn4VM0staqWk9F0AOoCt3CvOa65dpJ3DMaEMvaZysmNCYs_YrfsI9ag

# Redis (настройки для Docker сервиса Redis, используется для очередей BullMQ)
# Для использования в режиме разработки
REDIS_URL=redis://redis:6379

# Node.js окружение
# NODE_ENV: должен быть development в dev-режиме
NODE_ENV=development