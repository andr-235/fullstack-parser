services:
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    env_file:
      - .env.dev
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - "5432"
    networks:
      - dev-db-network

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - dev-app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    env_file:
      - .env.dev
    environment:
      - ENV=development
      - DATABASE_URL=postgresql+asyncpg://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY}
      - CORS_ORIGINS=${CORS_ORIGINS}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ALGORITHM=${JWT_ALGORITHM:-HS256}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES:-15}
      - SERVER_IP=localhost
      - VK_ACCESS_TOKEN=${VK_ACCESS_TOKEN}
    expose:
      - "8000"
    volumes:
      - ./backend:/app
      - /app/__pycache__
      - /app/.pytest_cache
    depends_on:
      - postgres
      - redis
    networks:
      - dev-app-network
      - dev-db-network

  arq_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    command: ["arq", "app.workers.arq_worker.WorkerSettings"]
    env_file:
      - .env.dev
    environment:
      - ENV=development
      - DATABASE_URL=postgresql+asyncpg://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY}
      - CORS_ORIGINS=${CORS_ORIGINS}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ALGORITHM=${JWT_ALGORITHM:-HS256}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES:-15}
      - SERVER_IP=localhost
      - VK_ACCESS_TOKEN=${VK_ACCESS_TOKEN}
      - ARQ_MAX_JOBS=10
      - ARQ_POLL_DELAY=1.0
      - ARQ_MAX_TRIES=3
    volumes:
      - ./backend:/app
      - /app/__pycache__
      - /app/.pytest_cache
    depends_on:
      - postgres
      - redis
    networks:
      - dev-app-network
      - dev-db-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    env_file:
      - .env.dev
    environment:
      - NODE_ENV=development
      - SERVER_IP=localhost
      - NEXT_PUBLIC_API_URL=http://localhost
      - TMPDIR=/tmp/uploads
    expose:
      - "3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
      - frontend_temp:/tmp/uploads
    depends_on:
      - backend
    networks:
      - dev-app-network

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/nginx.conf
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - dev-app-network

networks:
  dev-app-network:
    driver: bridge
  dev-db-network:
    driver: bridge
    internal: true

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  frontend_temp:
    driver: local 