---
description: "Environment configuration and secrets management patterns"
globs: .env*, **/config.py, **/settings.py, **/.env*
alwaysApply: false
---

# ‚öôÔ∏è Environment Configuration Guidelines

## üîß Pydantic Settings Configuration

### Base Settings Class
```python
# app/core/config.py
from typing import Any, Dict, List, Optional, Union
from pydantic import BaseSettings, Field, validator, PostgresDsn, RedisDsn
import secrets
import warnings
from pathlib import Path

class Settings(BaseSettings):
    """–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π"""
    
    # Application
    APP_NAME: str = Field("VK Comments Monitor", description="–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    APP_VERSION: str = Field("1.0.0", description="–í–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    DEBUG: bool = Field(False, description="–†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏")
    ENVIRONMENT: str = Field("production", description="–û–∫—Ä—É–∂–µ–Ω–∏–µ (development/staging/production)")
    
    # Security
    SECRET_KEY: str = Field(..., min_length=32, description="–°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á –¥–ª—è JWT")
    ALGORITHM: str = Field("HS256", description="–ê–ª–≥–æ—Ä–∏—Ç–º –¥–ª—è JWT")
    ACCESS_TOKEN_EXPIRE_MINUTES: int = Field(30, gt=0, description="–í—Ä–µ–º—è –∂–∏–∑–Ω–∏ access —Ç–æ–∫–µ–Ω–∞")
    
    # Database
    DATABASE_HOST: str = Field("localhost", description="–•–æ—Å—Ç PostgreSQL")
    DATABASE_PORT: int = Field(5432, ge=1, le=65535, description="–ü–æ—Ä—Ç PostgreSQL")
    DATABASE_USER: str = Field("vk_monitor", description="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å PostgreSQL")
    DATABASE_PASSWORD: str = Field(..., min_length=8, description="–ü–∞—Ä–æ–ª—å PostgreSQL")
    DATABASE_NAME: str = Field("vk_monitor", description="–ù–∞–∑–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    DATABASE_URL: Optional[PostgresDsn] = Field(None, description="–ü–æ–ª–Ω—ã–π URL –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î")
    
    # Redis
    REDIS_HOST: str = Field("localhost", description="–•–æ—Å—Ç Redis")
    REDIS_PORT: int = Field(6379, ge=1, le=65535, description="–ü–æ—Ä—Ç Redis")
    REDIS_PASSWORD: Optional[str] = Field(None, description="–ü–∞—Ä–æ–ª—å Redis")
    REDIS_DB: int = Field(0, ge=0, description="–ù–æ–º–µ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Redis")
    REDIS_URL: Optional[RedisDsn] = Field(None, description="–ü–æ–ª–Ω—ã–π URL –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Redis")
    
    # VK API
    VK_ACCESS_TOKEN: str = Field(..., min_length=85, description="VK API access token")
    VK_API_VERSION: str = Field("5.131", description="–í–µ—Ä—Å–∏—è VK API")
    VK_REQUESTS_PER_SECOND: int = Field(3, ge=1, le=20, description="–õ–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ VK API –≤ —Å–µ–∫—É–Ω–¥—É")
    
    @validator("SECRET_KEY", pre=True)
    def validate_secret_key(cls, v):
        """–í–∞–ª–∏–¥–∞—Ü–∏—è —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞"""
        if isinstance(v, str) and v:
            return v
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –∫–ª—é—á –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
        if not v:
            generated_key = secrets.token_urlsafe(32)
            warnings.warn(
                f"SECRET_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π: {generated_key}",
                UserWarning
            )
            return generated_key
        return v
    
    @validator("DATABASE_URL", pre=True)
    def assemble_db_connection(cls, v: Optional[str], values: Dict[str, Any]) -> Any:
        """–°–æ–±–∏—Ä–∞–µ–º DATABASE_URL –∏–∑ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"""
        if isinstance(v, str) and v:
            return v
        
        return PostgresDsn.build(
            scheme="postgresql+asyncpg",
            user=values.get("DATABASE_USER"),
            password=values.get("DATABASE_PASSWORD"),
            host=values.get("DATABASE_HOST"),
            port=str(values.get("DATABASE_PORT")),
            path=f"/{values.get('DATABASE_NAME') or ''}",
        )
    
    class Config:
        env_file = ".env"
        env_file_encoding = "utf-8"
        case_sensitive = True

# –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –Ω–∞—Å—Ç—Ä–æ–µ–∫
settings = Settings()
```

## üìÅ Environment Files Structure

### .env.example (Template)
```bash
# Application Configuration
APP_NAME="VK Comments Monitor"
APP_VERSION="1.0.0"
ENVIRONMENT="development"
DEBUG=true

# Security Configuration
SECRET_KEY="your-super-secret-key-here-minimum-32-characters"
ALGORITHM="HS256"
ACCESS_TOKEN_EXPIRE_MINUTES=30

# Database Configuration (PostgreSQL)
DATABASE_HOST="localhost"
DATABASE_PORT=5432
DATABASE_USER="vk_monitor"
DATABASE_PASSWORD="your-secure-password"
DATABASE_NAME="vk_monitor"

# Redis Configuration
REDIS_HOST="localhost"
REDIS_PORT=6379
REDIS_PASSWORD=""
REDIS_DB=0

# VK API Configuration
VK_ACCESS_TOKEN="your-vk-group-access-token-here"
VK_API_VERSION="5.131"
VK_REQUESTS_PER_SECOND=3
```

## ‚úÖ Configuration Checklist

### Security
- [ ] SECRET_KEY —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∏–º–µ–µ—Ç –º–∏–Ω–∏–º—É–º 32 —Å–∏–º–≤–æ–ª–∞
- [ ] –ü–∞—Ä–æ–ª–∏ –ë–î –∏–º–µ—é—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—É—é —Å–ª–æ–∂–Ω–æ—Å—Ç—å
- [ ] VK —Ç–æ–∫–µ–Ω—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤ –ª–æ–≥–∞—Ö
- [ ] .env —Ñ–∞–π–ª—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ .gitignore
- [ ] –ü—Ä–æ–¥–∞–∫—à–Ω —Å–µ–∫—Ä–µ—Ç—ã –Ω–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –∫–æ–¥–µ

### Environment Files
- [ ] .env.example —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
- [ ] .env.development –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
- [ ] .env.production –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω–∞
- [ ] –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω—ã –∏ –≤–∞–ª–∏–¥–∏—Ä—É—é—Ç—Å—è
- [ ] –ó–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –±–µ–∑–æ–ø–∞—Å–Ω—ã

### Configuration Loading
- [ ] Pydantic –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
- [ ] –û—à–∏–±–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—Ç –∑–∞–ø—É—Å–∫
- [ ] Database URLs —Å–æ–±–∏—Ä–∞—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
- [ ] –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ

