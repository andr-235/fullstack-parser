# Cursor AI Rules for Fullstack Parser Project

## Общие принципы
- Следуй всем правилам из папки @/rules
- Всегда проверяй и тестируй код перед предоставлением
- Используй современные практики разработки
- Соблюдай принципы безопасности

## Ссылки на существующие правила

### Архитектура проекта
См. @/rules/project-architecture.mdc
- Следуй структуре проекта
- Используй правильную организацию файлов
- Соблюдай принципы модульности

### Backend разработка
См. @/rules/fastapi-backend.mdc
- Используй FastAPI с Python 3.11+
- Соблюдай snake_case для функций и переменных
- PascalCase для классов
- Структурированное логирование
- Документируй код

### Frontend разработка
См. @/rules/nextjs-frontend.mdc
- Next.js 14 с TypeScript strict mode
- TailwindCSS для стилизации
- React Query для управления состоянием
- camelCase для переменных и функций
- PascalCase для компонентов
- JSDoc документация

### Тестирование
См. @/rules/testing-standards.mdc
- Покрытие тестами критических компонентов
- Unit тесты для сервисов
- Integration тесты для API
- E2E тесты для пользовательских сценариев

### Docker и развертывание
См. @/rules/docker-deployment.mdc
- Используй Docker Compose v2
- Переменные окружения только из .env
- Внешние Docker образы для продакшена
- Автоматическое развертывание через GitHub Actions

### Git Flow
См. @/rules/git-flow.mdc
- Используй feature ветки от main
- Conventional commits для сообщений
- Pull Request workflow
- Автоматическая очистка веток
- Защищенная main ветка

### Безопасность
См. @/rules/security-guidelines.mdc
- Валидация всех входных данных
- Безопасная работа с API ключами
- Защита от SQL инъекций
- Логирование безопасности

## Рабочий процесс
- Создавай git ветки для изменений
- Используй pull request workflow
- Удаляй временные ветки после мержа
- Следуй pre-commit проверкам

## Уведомления
- Только Telegram для статуса развертывания
- Не отправляй .env файлы в репозиторий
- Используй Poetry для управления зависимостями Python

## Дополнительные требования
- Используй wget вместо curl в скриптах
- Применяй import aliases вместо глубоких относительных путей
- Автоматически вставляй YAML frontmatter в .mdc файлы
- Создавай только .md файлы, не заменяй содержимое автоматически 