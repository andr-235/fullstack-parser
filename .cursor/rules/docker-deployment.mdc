---
description: Docker containerization and deployment best practices
globs: **/Dockerfile, **/docker-compose*.yml, **/nginx/*.conf, **/scripts/*.sh
alwaysApply: false
---

# üê≥ DOCKER –ò DEPLOYMENT

## Docker best practices:
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ **multi-stage builds** –¥–ª—è production
- –ü—Ä–∏–º–µ–Ω—è–π—Ç–µ **non-root users** –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞—Ö
- –ú–∏–Ω–∏–º–∏–∑–∏—Ä—É–π—Ç–µ **attack surface** —Å distroless/alpine images
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ **.dockerignore** –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
- –ü—Ä–∏–º–µ–Ω—è–π—Ç–µ **health checks** –¥–ª—è –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤

## Environment Management:
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ **environment-specific** –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
- –ü—Ä–∏–º–µ–Ω—è–π—Ç–µ **secrets management** (–Ω–µ –≤ .env —Ñ–∞–π–ª–∞—Ö)
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ **feature flags** –¥–ª—è gradual rollouts
- –ü—Ä–∏–º–µ–Ω—è–π—Ç–µ **configuration validation** –Ω–∞ —Å—Ç–∞—Ä—Ç–µ

## üöÄ CI/CD

### GitHub Actions:
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ **parallel jobs** –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
- –ü—Ä–∏–º–µ–Ω—è–π—Ç–µ **caching** –¥–ª—è dependencies
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ **security scanning** –Ω–∞ –∫–∞–∂–¥—ã–π PR
- –ü—Ä–∏–º–µ–Ω—è–π—Ç–µ **environment-specific deployments**
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ **rollback strategies** –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö

### Code Quality:
- –ü—Ä–∏–º–µ–Ω—è–π—Ç–µ **pre-commit hooks** –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ **ESLint + Prettier** –¥–ª—è frontend
- –ü—Ä–∏–º–µ–Ω—è–π—Ç–µ **Black + isort + ruff** –¥–ª—è backend
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ **type checking** (mypy, TypeScript)
- –ü—Ä–∏–º–µ–Ω—è–π—Ç–µ **security linting** (bandit, eslint-plugin-security)

## üì¶ DEPENDENCIES

### Package Management:
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ **lock files** (package-lock.json, requirements.txt)
- –ü—Ä–∏–º–µ–Ω—è–π—Ç–µ **security auditing** –¥–ª—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
- –†–µ–≥—É–ª—è—Ä–Ω–æ **–æ–±–Ω–æ–≤–ª—è–π—Ç–µ dependencies**
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ **pinned versions** –¥–ª—è production
- –ü—Ä–∏–º–µ–Ω—è–π—Ç–µ **dependency scanning** –≤ CI/CD



