---
description: –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ best practices –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è backend –∏ frontend (pytest, coverage, async, user-centric)
globs:
  [
    "/test_.py",
    "/tests//.py",
    "/conftest.py",
    "pytest.ini",
    "pyproject.toml",
    "/.test.{ts,tsx,js,jsx}",
    "/.spec.{ts,tsx,js,jsx}",
  ]
alwaysApply: false
---

# üß™ Testing Best Practices (–û–±—ä–µ–¥–∏–Ω—ë–Ω–Ω—ã–π –≥–∞–π–¥)

## –û–±—â–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã –∏ —á–µ–∫–ª–∏—Å—Ç

- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ **pytest** —Å async support –¥–ª—è backend
- –ü—Ä–∏–º–µ–Ω—è–π—Ç–µ **test fixtures** –¥–ª—è database setup
- –°–æ–∑–¥–∞–≤–∞–π—Ç–µ **integration tests** –¥–ª—è API endpoints
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ **pytest-mock** –¥–ª—è mocking
- –°—Ç—Ä–µ–º–∏—Ç–µ—Å—å –∫ **80%+ coverage**
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ **Jest + React Testing Library** –¥–ª—è frontend
- –ü—Ä–∏–º–µ–Ω—è–π—Ç–µ **user-centric** testing approach
- –°–æ–∑–¥–∞–≤–∞–π—Ç–µ **component tests** –∏ **integration tests**
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ **MSW** –¥–ª—è API mocking
- –ü—Ä–∏–º–µ–Ω—è–π—Ç–µ **accessibility testing**
- Arrange-Act-Assert pattern –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–µ—Å—Ç–æ–≤
- One assertion per test –∫–æ–≥–¥–∞ –≤–æ–∑–º–æ–∂–Ω–æ
- Descriptive test names –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
- Mock external dependencies (API, database, third-party services)
- Test edge cases –∏ error scenarios

---

# –ü–æ–¥—Ä–æ–±–Ω—ã–µ best practices, –ø—Ä–∏–º–µ—Ä—ã –∏ –∫–æ–Ω—Ñ–∏–≥–∏

// ... –≤—Å—Ç–∞–≤–∏—Ç—å –¥–∞–ª–µ–µ –≤–µ—Å—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏ –Ω–µ –¥—É–±–ª–∏—Ä—É—é—â–∏–π—Å—è –∫–æ–Ω—Ç–µ–Ω—Ç –∏–∑ testing-pytest-best-practices.mdc ...

# –ü–æ–¥—Ä–æ–±–Ω—ã–µ best practices, –ø—Ä–∏–º–µ—Ä—ã –∏ –∫–æ–Ω—Ñ–∏–≥–∏

// ... –≤—Å—Ç–∞–≤–∏—Ç—å –¥–∞–ª–µ–µ –≤–µ—Å—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏ –Ω–µ –¥—É–±–ª–∏—Ä—É—é—â–∏–π—Å—è –∫–æ–Ω—Ç–µ–Ω—Ç –∏–∑ testing-pytest-best-practices.mdc ...
