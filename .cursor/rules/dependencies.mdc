---
description: Управление зависимостями frontend проекта
alwaysApply: false
---
# Управление зависимостями

## **Основные зависимости**

### **React & Next.js**

- **next**: `15.4.3` - Последняя стабильная версия
- **react**: `^19.1.0` - React 19 с новыми возможностями
- **react-dom**: `^19.1.0` - Соответствует React версии

### **UI библиотеки**

- **@radix-ui/react-\*** - Компоненты доступности
  - `@radix-ui/react-avatar`: `^1.1.10`
  - `@radix-ui/react-checkbox`: `^1.3.2`
  - `@radix-ui/react-dialog`: `^1.1.14`
  - `@radix-ui/react-dropdown-menu`: `^2.1.15`
  - `@radix-ui/react-label`: `^2.1.7`
  - `@radix-ui/react-progress`: `^1.1.7`
  - `@radix-ui/react-select`: `^2.2.5`
  - `@radix-ui/react-slot`: `^1.2.3`
  - `@radix-ui/react-switch`: `^1.2.5`
  - `@radix-ui/react-tabs`: `^1.1.12`
  - `@radix-ui/react-toast`: `^1.2.14`

### **Стилизация**

- **tailwindcss**: `^3.4.17` - CSS фреймворк
- **class-variance-authority**: `^0.7.1` - Утилиты для вариантов компонентов
- **clsx**: `^2.1.1` - Условные классы
- **tailwind-merge**: `^2.6.0` - Объединение Tailwind классов

### **Формы и валидация**

- **react-hook-form**: `^7.60.0` - Управление формами
- **@hookform/resolvers**: `^3.10.0` - Резолверы для валидации
- **zod**: `^3.25.76` - Схемы валидации

### **Состояние и кеширование**

- **zustand**: `^4.5.7` - Глобальное состояние
- **@tanstack/react-query**: `^5.83.0` - Кеширование и синхронизация данных

### **HTTP клиент**

- **axios**: `^1.11.0` - HTTP запросы

### **Утилиты**

- **date-fns**: `^3.6.0` - Работа с датами
- **date-fns-tz**: `^3.2.0` - Временные зоны
- **lucide-react**: `^0.525.0` - Иконки

### **Специализированные компоненты**

- **react-dropzone**: `^14.3.8` - Drag & drop файлы
- **react-window**: `^1.8.11` - Виртуализация списков
- **react-window-infinite-loader**: `^1.0.10` - Бесконечная прокрутка
- **recharts**: `^2.15.4` - Графики и диаграммы

### **Уведомления**

- **react-hot-toast**: `^2.5.2` - Toast уведомления
- **sonner**: `^2.0.6` - Современные уведомления

## **Dev зависимости**

### **TypeScript**

- **typescript**: `^5.8.3` - Последняя стабильная версия
- **@types/node**: `^24.1.0`
- **@types/react**: `^18.3.23`
- **@types/react-dom**: `^18.3.7`
- **@types/react-window**: `^1.8.8`

### **Линтинг и форматирование**

- **eslint**: `^9.31.0` - Линтер
- **eslint-config-next**: `15.4.1` - Конфигурация для Next.js
- **eslint-plugin-import**: `^2.32.0` - Правила импортов
- **eslint-import-resolver-typescript**: `^4.4.4` - TypeScript резолвер
- **prettier**: `^3.6.2` - Форматирование кода

### **Тестирование**

- **jest**: `^29.7.0` - Тестовый фреймворк
- **jest-environment-jsdom**: `^29.7.0` - DOM окружение
- **@testing-library/react**: `^16.3.0` - Тестирование React
- **@testing-library/jest-dom**: `^6.6.3` - Матчеры для DOM
- **@testing-library/user-event**: `^14.6.1` - Симуляция пользователя
- **@types/jest**: `^30.0.0`

### **Сборка**

- **autoprefixer**: `^10.4.21` - Автопрефиксы CSS
- **postcss**: `^8.5.6` - Обработка CSS
- **@svgr/webpack**: `^8.1.0` - SVG как React компоненты

### **DevTools**

- **@tanstack/react-query-devtools**: `^5.83.0` - Отладка React Query

## **Рекомендации по версиям**

### **✅ DO:**

- Используйте точные версии для критичных зависимостей (next, react)
- Обновляйте зависимости регулярно (раз в месяц)
- Проверяйте совместимость перед обновлением major версий
- Используйте `pnpm` как package manager (уже настроен)
- Группируйте зависимости по категориям в package.json

### **❌ DON'T:**

- Не используйте `*` для версий в продакшене
- Не обновляйте все зависимости одновременно
- Не игнорируйте breaking changes в major версиях
- Не смешивайте разные package managers

## **План обновлений**

### **Критичные обновления (ежемесячно)**

```bash
# Безопасные обновления
pnpm update --latest

# Проверка уязвимостей
pnpm audit
```

### **Major версии (квартально)**

- React 19 → React 20 (когда выйдет)
- Next.js 15 → Next.js 16
- TypeScript 5 → TypeScript 6

### **Мониторинг**

- Настройте Dependabot для автоматических PR
- Используйте `pnpm outdated` для проверки устаревших пакетов
- Следите за security advisories

## **Оптимизация бандла**

### **Tree shaking**

```typescript
// ✅ DO: Импортируйте только нужные компоненты
import { Button } from "@radix-ui/react-button";

// ❌ DON'T: Импортируйте весь пакет
import * as RadixUI from "@radix-ui/react-button";
```

### **Code splitting**

```typescript
// ✅ DO: Динамические импорты для тяжелых компонентов
const HeavyComponent = dynamic(() => import("./HeavyComponent"), {
  loading: () => <Skeleton />,
});
```

## **Безопасность**

### **Регулярные проверки**

```bash
# Проверка уязвимостей
pnpm audit

# Обновление lock файла
pnpm install --frozen-lockfile
```

### **Защита от supply chain атак**

- Используйте `pnpm` с проверкой integrity
- Настройте `.npmrc` с security policies
- Регулярно обновляйте зависимости

## **Ссылки**

- [Next.js документация](https://nextjs.org/docs)
- [React Query документация](https://tanstack.com/query/latest)
- [Radix UI документация](https://www.radix-ui.com/)
- [Tailwind CSS документация](https://tailwindcss.com/docs)
