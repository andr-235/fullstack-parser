---
description: FastAPI backend development patterns and best practices
globs: backend/**/*.py, **/*api*.py, **/main.py, **/models/*.py, **/schemas/*.py
alwaysApply: false
---

# üêç BACKEND (FastAPI) –ü–†–ê–í–ò–õ–ê

## –°—Ç–∏–ª—å –∫–æ–¥–∞:
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ **async/await** –¥–ª—è –≤—Å–µ—Ö I/O –æ–ø–µ—Ä–∞—Ü–∏–π
- –ü—Ä–∏–º–µ–Ω—è–π—Ç–µ **type hints** –¥–ª—è –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
- –°–ª–µ–¥—É–π—Ç–µ **PEP 8** —Å –¥–ª–∏–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ 88 —Å–∏–º–≤–æ–ª–æ–≤ (Black)
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ **Pydantic v2** –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö
- –ü—Ä–∏–º–µ–Ω—è–π—Ç–µ **dependency injection** —á–µ—Ä–µ–∑ FastAPI Depends

## –°—Ç—Ä—É–∫—Ç—É—Ä–∞ FastAPI:
```python
# –ü—Ä–∏–º–µ—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—ã app/
app/
‚îú‚îÄ‚îÄ __init__.py
‚îú‚îÄ‚îÄ main.py              # FastAPI app
‚îú‚îÄ‚îÄ core/
‚îÇ   ‚îú‚îÄ‚îÄ config.py        # Settings —á–µ—Ä–µ–∑ pydantic-settings
‚îÇ   ‚îú‚îÄ‚îÄ security.py      # JWT auth, CORS
‚îÇ   ‚îî‚îÄ‚îÄ database.py      # SQLAlchemy setup
‚îú‚îÄ‚îÄ api/
‚îÇ   ‚îî‚îÄ‚îÄ v1/
‚îÇ       ‚îú‚îÄ‚îÄ __init__.py
‚îÇ       ‚îú‚îÄ‚îÄ endpoints/   # API endpoints
‚îÇ       ‚îî‚îÄ‚îÄ dependencies.py
‚îú‚îÄ‚îÄ models/              # SQLAlchemy models
‚îú‚îÄ‚îÄ schemas/             # Pydantic schemas
‚îú‚îÄ‚îÄ services/            # Business logic
‚îî‚îÄ‚îÄ tests/              # Pytest tests
```

## –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:
- –í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ **HTTPBearer** –¥–ª—è JWT —Ç–æ–∫–µ–Ω–æ–≤
- –ü—Ä–∏–º–µ–Ω—è–π—Ç–µ **rate limiting** –¥–ª—è –≤—Å–µ—Ö endpoints
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ **CORS middleware** —Å explicit origins
- –í–∞–ª–∏–¥–∏—Ä—É–π—Ç–µ **–≤—Å–µ –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ** —á–µ—Ä–µ–∑ Pydantic
- –õ–æ–≥–∏—Ä—É–π—Ç–µ **security events** –±–µ–∑ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö

## –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ **SQLAlchemy 2.0** syntax —Å async
- –ü—Ä–∏–º–µ–Ω—è–π—Ç–µ **connection pooling**
- –°–æ–∑–¥–∞–≤–∞–π—Ç–µ **indexes** –¥–ª—è —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ **Alembic** –¥–ª—è –≤—Å–µ—Ö –º–∏–≥—Ä–∞—Ü–∏–π
- –ü—Ä–∏–º–µ–Ω—è–π—Ç–µ **transactions** –¥–ª—è —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π

## –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞:
```python
from fastapi import FastAPI, Depends, HTTPException, status
from sqlalchemy.ext.asyncio import AsyncSession
from app.core.database import get_db
from app.models.user import User
from app.schemas.user import UserCreate, UserResponse

@app.post("/users/", response_model=UserResponse)
async def create_user(
    user_data: UserCreate,
    db: AsyncSession = Depends(get_db)
) -> UserResponse:
    # Business logic here
    pass
```

## ‚ö° Backend Performance:
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ **async/await** –¥–ª—è I/O –æ–ø–µ—Ä–∞—Ü–∏–π
- –ü—Ä–∏–º–µ–Ω—è–π—Ç–µ **connection pooling** –¥–ª—è database
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ **Redis caching** –¥–ª—è —á–∞—Å—Ç–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö
- –ü—Ä–∏–º–µ–Ω—è–π—Ç–µ **database indexes** –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ **background tasks** –¥–ª—è —Ç—è–∂–µ–ª—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π



