# Pre-commit hooks для автоматической проверки качества кода
# Установка: pip install pre-commit && pre-commit install
# Запуск: pre-commit run --all-files

# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks

repos:
  # =============================================================================
  # PYTHON BACKEND HOOKS
  # =============================================================================

  # Black - форматирование кода
  - repo: https://github.com/psf/black
    rev: 25.1.0
    hooks:
      - id: black
        language_version: python3.11
        args: [--line-length=79, --target-version=py311]
        files: ^backend/

  # isort - сортировка импортов
  - repo: https://github.com/pre-commit/mirrors-isort
    rev: v5.10.1
    hooks:
      - id: isort
        args: [--profile=black, --line-length=79]
        files: ^backend/

  # Ruff - линтер и форматтер
  - repo: https://github.com/charliermarsh/ruff-pre-commit
    rev: v0.12.3
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
        files: ^backend/
      - id: ruff-format
        files: ^backend/

  # MyPy - проверка типов
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.16.1
    hooks:
      - id: mypy
        args: [--ignore-missing-imports, --disable-error-code=assignment, --disable-error-code=arg-type]
        files: ^backend/

  # Bandit - проверка безопасности
  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.6
    hooks:
      - id: bandit
        args: [-r, backend/, -f, json, -o, bandit-report.json]
        files: ^backend/

  # =============================================================================
  # NODE.JS FRONTEND HOOKS
  # =============================================================================

  # Prettier - форматирование кода
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        files: ^frontend/
        types: [file]
        types_or: [javascript, jsx, ts, tsx, json, css, scss, html, yaml]

  # ESLint - линтер для JavaScript/TypeScript
  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v9.31.0
    hooks:
      - id: eslint
        files: ^frontend/
        types: [file]
        types_or: [javascript, jsx, ts, tsx]
        additional_dependencies:
          - eslint@8.56.0
          - eslint-config-next@15.0.0
          - '@typescript-eslint/eslint-plugin'
          - '@typescript-eslint/parser'

  # TypeScript проверка типов
  - repo: local
    hooks:
      - id: typescript-check
        name: TypeScript Check
        entry: npx tsc --noEmit
        language: system
        files: ^frontend/
        pass_filenames: false

  # =============================================================================
  # GENERAL HOOKS
  # =============================================================================

  # Базовые проверки файлов
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: check-added-large-files
        args: [--maxkb=1000]
      - id: check-merge-conflict
      - id: check-yaml
      - id: check-json
      - id: check-toml
      - id: check-case-conflict
      - id: check-docstring-first
      - id: check-ast
      - id: check-json
      - id: check-merge-conflict
      - id: debug-statements
      - id: name-tests-test
      - id: requirements-txt-fixer

  # Conventional Commits
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v4.8.3
    hooks:
      - id: commitizen
        stages: [commit-msg]

  # Проверка секретов в коде (временно отключено из-за проблем с совместимостью)
  # - repo: https://github.com/Yelp/detect-secrets
  #   rev: v1.4.0
  #   hooks:
  #     - id: detect-secrets
  #       args: [--baseline, .secrets.baseline]
  #       exclude: |
  #         (?x)^(
  #           .*\.min\.js|
  #           .*\.min\.css|
  #           node_modules/|
  #           __pycache__/|
  #           \.git/|
  #           \.pytest_cache/|
  #           \.mypy_cache/|
  #           \.coverage|
  #           htmlcov/|
  #           dist/|
  #           build/|
  #           .*\.log|
  #           .env.*|
  #           env\.example
  #         )$

  # Проверка Docker файлов
  - repo: https://github.com/hadolint/hadolint
    rev: v2.13.1-beta
    hooks:
      - id: hadolint-docker
        args: [--ignore, DL3008, --ignore, DL3009]
        files: Dockerfile

  # =============================================================================
  # КОНФИГУРАЦИЯ
  # =============================================================================
default_language_version:
  python: python3.11
  node: 18.17.0

fail_fast: false
minimum_pre_commit_version: 3.0.0

# Exclude patterns
exclude: |
  (?x)^(
    .*\.min\.js|
    .*\.min\.css|
    node_modules/|
    __pycache__/|
    \.git/|
    \.pytest_cache/|
    \.mypy_cache/|
    \.coverage|
    htmlcov/|
    dist/|
    build/|
    .*\.log|
    .env.*|
    env\.example|
    backup/|
    logs/|
    ssl/|
    ai-docs/|
    docs/|
    monitoring/|
    scripts/|
    environments/|
    memory-bank/|
    tests/|
    nginx/|
    app/|
    branches_to_delete\.txt|
    init_sq\.sql|
    migrate\.sh|
    reset_db\.sh|
    Makefile|
    pull_request_template\.md|
    \.gitmessage
  )$
