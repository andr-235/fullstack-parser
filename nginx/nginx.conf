# =============================================================================
# Production-Ready Nginx Configuration - HTTP Only, No SSL
# Best Practices 2025
# =============================================================================

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Worker configuration
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # =============================================================================
    # Basic Settings
    # =============================================================================
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging format
    log_format main_json escape=json
        '{'
            '"time":"$time_iso8601",'
            '"remote_addr":"$remote_addr",'
            '"request":"$request",'
            '"status":$status,'
            '"body_bytes_sent":$body_bytes_sent,'
            '"request_time":$request_time,'
            '"http_referer":"$http_referer",'
            '"http_user_agent":"$http_user_agent",'
            '"http_x_forwarded_for":"$http_x_forwarded_for",'
            '"upstream_response_time":"$upstream_response_time",'
            '"upstream_addr":"$upstream_addr"'
        '}';
    
    access_log /var/log/nginx/access.log main_json;
    
    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    
    # =============================================================================
    # Gzip Compression
    # =============================================================================
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # =============================================================================
    # Rate Limiting
    # =============================================================================
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=30r/s;
    
    # =============================================================================
    # Upstream Servers
    # =============================================================================
    upstream backend {
        server api:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream frontend {
        server frontend:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    # =============================================================================
    # Security Headers (even without HTTPS!)
    # =============================================================================
    map $sent_http_content_type $csp_header {
        ~^text/html "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; connect-src 'self' http://localhost:8000; frame-ancestors 'none';";
        default "default-src 'self'; frame-ancestors 'none';";
    }
    
    # =============================================================================
    # Main Server Block
    # =============================================================================
    server {
        listen 80;
        server_name _;
        
        # Security headers
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy $csp_header always;
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
        
        # Hide nginx version
        server_tokens off;
        
        # =============================================================================
        # Health Check Endpoint
        # =============================================================================
        location = /health {
            access_log off;
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }
        
        # =============================================================================
        # API Routes
        # =============================================================================
        location /api/ {
            # Rate limiting
            limit_req zone=api burst=20 nodelay;
            
            # Proxy settings - убираем префикс /api/ при проксировании
            proxy_pass http://backend/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }
        
        # =============================================================================
        # Next.js HMR WebSocket (для разработки)
        # =============================================================================
        location /_next/webpack-hmr {
            proxy_pass http://frontend/_next/webpack-hmr;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
        
        # =============================================================================
        # Next.js Static Files
        # =============================================================================
        location /_next/static/ {
            proxy_pass http://frontend;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options "nosniff";
        }
        
        location /_next/image {
            proxy_pass http://frontend;
            expires 1M;
            add_header Cache-Control "public";
        }
        
        # =============================================================================
        # Static Files (if any)
        # =============================================================================
        location /static/ {
            alias /var/www/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options "nosniff";
        }
        
        # =============================================================================
        # Media Files (if any)
        # =============================================================================
        location /media/ {
            alias /var/www/media/;
            expires 1M;
            add_header Cache-Control "public";
            add_header X-Content-Type-Options "nosniff";
        }
        
        # =============================================================================
        # Admin and Debug Routes (Restrict Access)
        # =============================================================================
        location ~ ^/(admin|debug|metrics)/ {
            # Allow only localhost and specific IPs
            allow 127.0.0.1;
            allow 172.0.0.0/8;
            allow 10.0.0.0/8;
            deny all;
            
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # =============================================================================
        # Frontend Routes (Next.js) - упрощенная конфигурация согласно best practices
        # =============================================================================
        location / {
            # Rate limiting
            limit_req zone=general burst=50 nodelay;
            
            # Proxy все запросы к Next.js (как рекомендует Context7)
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffer settings для Next.js streaming responses
            proxy_buffering off;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # ВАЖНО: не используем try_files в блоке с Next.js!
            # Это нарушает работу Next.js роутинга
        }
        
        # =============================================================================
        # Error Pages
        # =============================================================================
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            internal;
            return 404 '{"error": "Not Found", "status": 404}\n';
            add_header Content-Type application/json;
        }
        
        location = /50x.html {
            internal;
            return 500 '{"error": "Internal Server Error", "status": 500}\n';
            add_header Content-Type application/json;
        }
    }
}
